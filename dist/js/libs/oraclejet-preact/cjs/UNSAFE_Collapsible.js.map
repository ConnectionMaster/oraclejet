{"version":3,"file":"UNSAFE_Collapsible.js","sources":["../../src/UNSAFE_Collapsible/CollapsibleHeaderIcon.tsx","../../src/UNSAFE_Collapsible/CollapsibleHeader.tsx","../../src/UNSAFE_Collapsible/CollapsibleContent.tsx","../../src/UNSAFE_Collapsible/Collapsible.tsx","../../src/UNSAFE_Collapsible/index.ts"],"sourcesContent":["import { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { ExpandIcon, CollapseIcon } from '../UNSAFE_ThemedIcons';\n\ntype IconProps = {\n  contentId: string;\n  isDisabled: boolean;\n  headerId: string;\n  isExpanded: boolean;\n  onClick?: (event: Event) => void;\n};\n\nconst styles = {\n  base: cssProps`${{\n    display: 'flex',\n    alignItems: 'center',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-private-button-ghost-chrome-text-color)',\n    backgroundColor: 'transparent',\n    border: 'none',\n    cursor: 'pointer',\n    paddingTop: '5px',\n    paddingRight: '5px',\n    paddingBottom: '5px',\n    paddingLeft: '5px',\n    marginInlineStart: '-8px'\n  }}`,\n  disabled: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)',\n    cursor: 'auto'\n  }}`\n};\n\n/**\n * Header icon subcomponent\n */\nexport const CollapsibleHeaderIcon = ({\n  contentId,\n  isDisabled,\n  headerId,\n  isExpanded,\n  onClick\n}: IconProps) => {\n  const classes = classNames([styles.base, isDisabled && styles.disabled]);\n  const Icon = isExpanded ? ExpandIcon : CollapseIcon;\n  return (\n    <button\n      class={classes}\n      aria-labelledby={headerId}\n      aria-controls={contentId}\n      aria-expanded={isExpanded}\n      onClick={onClick}>\n      <Icon size=\"6x\" />\n    </button>\n  );\n};\n","import { JSX } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { Flex } from '../UNSAFE_Flex';\nimport { CollapsibleHeaderIcon } from './CollapsibleHeaderIcon';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'id' | 'children'>;\n\ntype HeaderProps = IntrinsicProps & {\n  id: string;\n  contentId: string;\n  isDisabled: boolean;\n  isExpanded: boolean;\n  toggleHandler: () => void;\n};\n\nconst styles = {\n  base: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-heading-text-color)',\n    paddingTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-1x)',\n    paddingRight: '0',\n    paddingBottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-1x)',\n    paddingLeft: '0',\n    cursor: 'pointer'\n  }}`,\n  disabled: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)',\n    cursor: 'auto'\n  }}`\n};\n\n/**\n * Header subcomponent\n */\nexport const CollapsibleHeader = ({\n  children,\n  id,\n  contentId,\n  isDisabled,\n  isExpanded,\n  toggleHandler\n}: HeaderProps) => {\n  const classes = classNames([styles.base, isDisabled && styles.disabled]);\n\n  return (\n    <div id={id} class={classes} onClick={toggleHandler}>\n      <Flex align=\"center\">\n        <CollapsibleHeaderIcon\n          isDisabled={isDisabled}\n          headerId={id}\n          contentId={contentId}\n          isExpanded={isExpanded}\n        />\n        {children}\n      </Flex>\n    </div>\n  );\n};\n","import { JSX } from 'preact';\nimport { useState, useEffect } from 'preact/hooks';\n\nimport { useAnimation, UseAnimationConfig } from '../hooks/UNSAFE_useAnimation';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'children'>;\n\ntype ContentProps = IntrinsicProps & {\n  id: string;\n  isExpanded: boolean;\n  onTransitionEnd: () => void;\n};\nexport const CollapsibleContent = ({ children, id, isExpanded, onTransitionEnd }: ContentProps) => {\n  const [state, setState] = useState<'mounting' | 'mounted' | 'unmounting' | 'unmounted'>(\n    isExpanded ? 'mounted' : 'unmounted'\n  );\n\n  const [prevExpanded, setPrevExpanded] = useState<boolean>(isExpanded);\n  const isAnimating = isExpanded !== prevExpanded || ['mounting', 'unmounting'].includes(state);\n\n  useEffect(() => {\n    if (isAnimating) {\n      setState(isExpanded ? 'mounting' : 'unmounting');\n    }\n  }, [isExpanded, isAnimating]);\n\n  const { nodeRef } = useAnimation<'expanded' | 'collapsed', HTMLDivElement>(\n    ['mounted', 'mounting'].includes(state) ? 'expanded' : 'collapsed',\n    {\n      animationStates,\n      onAnimationEnd: ({ animationState }) => {\n        const isExpanded = animationState === 'expanded';\n        setState(isExpanded ? 'mounted' : 'unmounted');\n        setPrevExpanded(isExpanded);\n        onTransitionEnd?.();\n      }\n    }\n  );\n  return (\n    <div ref={nodeRef} id={id} tabIndex={-1} aria-hidden={!isExpanded || undefined}>\n      {(isAnimating || state === 'mounted') && children}\n    </div>\n  );\n};\n\n/**\n * The transition from collapsed to expanded works as follows:\n * 1. When the component is initially rendered in the collapsed state, we\n *    explicitly set maxHeight and overflowY from \"to\" configuration.\n * 2. When the expanded prop changes from false to true, we first mount the content children.\n * 3. Once this is mounted we trigger an animation updating animationState value of useAnimationHook.\n * 4. Configuration is represented inside hook. Passed config depends if previous animation was completed or not.\n *    We could check that based on node.style.maxHeight.\n *\n * The transition from expanded to collapsed is similar:\n * 1. We trigger an animation updating animationState value of useAnimationHook.\n * 2. Once animation is completed, with the help of end config,we set max-Height as 'none'.\n *    This will allow us to keep adding content.\n * 3. Once this is done, onAnimationEnd is called(as 'from collapsed to expanded\"). Here, content children are unmouunted.\n *\n * In some future, handling unmounting would be handled using another API agnostic to useAnimation hook. For now, this is handled by user.\n */\n\nconst animationStates: UseAnimationConfig<\n  'expanded' | 'collapsed',\n  HTMLDivElement\n>['animationStates'] = {\n  expanded: (node) => {\n    return {\n      to: {\n        maxHeight: `${node.scrollHeight}px`,\n        overflowY: 'hidden'\n      },\n      options: {\n        duration: 400\n      },\n      end: {\n        maxHeight: 'none'\n      }\n    };\n  },\n  collapsed: (node) => {\n    return {\n      ...(node.style.maxHeight === 'none' && {\n        from: {\n          maxHeight: `${node.scrollHeight}px`\n        }\n      }),\n      to: {\n        overflowY: 'hidden',\n        maxHeight: '0'\n      },\n      options: {\n        duration: 400\n      }\n    };\n  }\n};\n","import { ComponentChildren, JSX } from 'preact';\nimport { useRef } from 'preact/hooks';\nimport { useId } from '../hooks/UNSAFE_useId';\nimport { CollapsibleHeader } from './CollapsibleHeader';\nimport { CollapsibleContent } from './CollapsibleContent';\n\ntype IntrinsicProps = Pick<JSX.HTMLAttributes<HTMLDivElement>, 'id' | 'children'>;\n\ntype Props = IntrinsicProps & {\n  /**\n   * Collapsible's header. If not specified, the header contains only an open/close icon. Note that the header text is required for JET collapsible for accessibility purposes.\n   */\n  header?: ComponentChildren;\n\n  /**\n   * Disables the collapsible if set to true\n   */\n  isDisabled?: boolean;\n\n  /**\n   * Specifies if the content is expanded\n   */\n  isExpanded?: boolean;\n\n  /**\n   * Property that triggers a callback immediately when toggle happens and value of expanded property should be updated\n   */\n  onToggle?: (details: ToggleDetail) => void;\n\n  /**\n   * Property that triggers a callback after toggle animation is done\n   */\n  onTransitionEnd?: (details: ToggleDetail) => void;\n};\n\nexport type ToggleDetail = {\n  value: boolean;\n};\n\n/**\n * Controlled Collapsible component\n */\nexport const Collapsible = ({\n  id,\n  header,\n  children,\n  isDisabled = false,\n  isExpanded = false,\n  onToggle,\n  onTransitionEnd\n}: Props) => {\n  const rootRef = useRef<HTMLDivElement>(null);\n  const uniqueID = useId();\n  const headerId = `oj-collapsible-header-${uniqueID}`;\n  const contentId = `oj-collapsible-content-${uniqueID}`;\n\n  /**\n   * Function handling toggle and invoking callback for collapsing/expanding\n   */\n  const toggleHandler = () => {\n    if (isDisabled) {\n      return;\n    }\n    onToggle?.({\n      value: !isExpanded\n    });\n  };\n\n  /**\n   * Function that is triggerd when animation ends\n   */\n  const transitionEndHandler = () => {\n    onTransitionEnd?.({\n      value: isExpanded\n    });\n  };\n\n  return (\n    <div id={id} ref={rootRef}>\n      <CollapsibleHeader\n        id={headerId}\n        contentId={contentId}\n        toggleHandler={toggleHandler}\n        isDisabled={isDisabled}\n        isExpanded={isExpanded}>\n        {header}\n      </CollapsibleHeader>\n      <CollapsibleContent\n        id={contentId}\n        isExpanded={isExpanded}\n        onTransitionEnd={transitionEndHandler}>\n        {children}\n      </CollapsibleContent>\n    </div>\n  );\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport * from './Collapsible';\n"],"names":["styles","CollapsibleHeaderIcon","contentId","isDisabled","headerId","isExpanded","onClick","classes","classNames","base","disabled","CollapsibleHeader","children","id","toggleHandler","useState","useEffect","useAnimation","_jsx","useRef","useId","_jsxs"],"mappings":"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"}