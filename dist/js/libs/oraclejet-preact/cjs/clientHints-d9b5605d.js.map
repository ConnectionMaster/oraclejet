{"version":3,"file":"clientHints-d9b5605d.js","sources":["../../src/utils/PRIVATE_clientHints/clientHints.ts"],"sourcesContent":["// Typescript does not support NavigatorUAData in its DOM lib,\n// therefore we declare our own type - see:\n//    https://wicg.github.io/ua-client-hints/#interface\ntype NavigatorUAData = {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n};\n\n// Enum types\ntype ClientBrowser = 'chrome' | 'edge' | 'firefox' | 'safari' | 'unknown';\n\ntype ClientDeviceType = 'phone' | 'tablet' | 'unknown';\n\ntype ClientPlatform = 'android' | 'ios' | 'mac' | 'windows' | 'unknown';\n\n// FIXME: Can we hide these exported type declarations from external consumers? See JET-50202\n// Defines the set of available hints about the client rendering environment\nexport type ClientHints = {\n  browser: ClientBrowser;\n  browserMajorVersion: number;\n  deviceType: ClientDeviceType;\n  platform: ClientPlatform;\n  hasTouchSupport: boolean;\n  isHybrid: boolean;\n};\n\nconst defaultClientHints: ClientHints = {\n  browser: 'unknown',\n  browserMajorVersion: -1,\n  deviceType: 'unknown',\n  platform: 'unknown',\n  hasTouchSupport: 'ontouchstart' in window,\n  isHybrid: window.matchMedia?.('(hover: hover) and (any-pointer: coarse)').matches\n};\n\nlet cachedClientHints: ClientHints;\n\nexport function getClientHints(uaString?: string): Readonly<ClientHints> {\n  // Compute if there is no cached result, OR if a userAgent string\n  //  was passed in as an argument\n  if (cachedClientHints === undefined || uaString) {\n    let hints: ClientHints;\n    const userAgentData = (navigator as any)['userAgentData'] as NavigatorUAData;\n    if (userAgentData) {\n      hints = getHintsFromUserAgentData(userAgentData);\n    } else {\n      hints = getHintsFromUserAgentString(uaString ?? navigator.userAgent);\n    }\n\n    // If no argument was passed in then this was computed from Navigator properties,\n    // so cache the result.\n    if (!uaString) {\n      cachedClientHints = { ...hints };\n      Object.freeze(cachedClientHints);\n    }\n    // Otherwise, return the bespoke results without touching the cache\n    else {\n      return hints;\n    }\n  }\n  return cachedClientHints;\n}\n\nfunction getHintsFromUserAgentData(userAgentData: NavigatorUAData): Readonly<ClientHints> {\n  const hints = { ...defaultClientHints };\n\n  // Loop through brands => browser, browserMajorVersion\n  for (let item of userAgentData.brands) {\n    const brand = item.brand.toLowerCase();\n    if (brand.indexOf('chrome') > -1) {\n      hints.browser = 'chrome';\n    } else if (brand.indexOf('edge') > -1) {\n      hints.browser = 'edge';\n    }\n    if (hints.browser !== 'unknown') {\n      hints.browserMajorVersion = Number(item.version);\n      break;\n    }\n  }\n\n  // Set deviceType, platform\n  const platform = userAgentData.platform.toLowerCase();\n  if (platform === 'windows') {\n    hints.platform = 'windows';\n  } else if (platform === 'android') {\n    hints.platform = 'android';\n    hints.deviceType = userAgentData.mobile ? 'phone' : 'tablet';\n  } else if (platform === 'macos') {\n    hints.platform = 'mac';\n  }\n  // TODO: Verify userAgentData support in Chrome 100 on iPhone/iPad when available\n  /*\n  else if (platform.indexOf('iphone') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'phone';\n  } else if (platform.indexOf('ipad') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'tablet';\n  } else if (platform.indexOf('ios') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = (userAgentData.mobile ? 'phone' : 'tablet');\n  }\n  */\n  return hints;\n}\n\nfunction getHintsFromUserAgentString(userAgent: string): Readonly<ClientHints> {\n  const hints = { ...defaultClientHints };\n\n  // Normalize the userAgent string\n  userAgent = userAgent.toLowerCase();\n\n  // Check platform, deviceType\n  if (userAgent.indexOf('iphone') > -1) {\n    hints.platform = 'ios';\n    hints.deviceType = 'phone';\n  } else if (\n    userAgent.indexOf('ipad') > -1 ||\n    (navigator.platform === 'MacIntel' && (navigator as any)['standalone'])\n  ) {\n    hints.platform = 'ios';\n    hints.deviceType = 'tablet';\n  } else if (userAgent.indexOf('mac') > -1) {\n    hints.platform = 'mac';\n  } else if (userAgent.indexOf('android') > -1) {\n    hints.platform = 'android';\n  } else if (userAgent.indexOf('win') > -1) {\n    hints.platform = 'windows';\n  }\n\n  // Now work on browser, browserMajorVersion\n  if (userAgent.indexOf('edg') > -1) {\n    hints.browser = 'edge';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /edg\\/(\\d+)/);\n  } else if (userAgent.indexOf('chrome') > -1) {\n    hints.browser = 'chrome';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /chrome\\/(\\d+)/);\n  } else if (userAgent.indexOf('crios') > -1) {\n    hints.browser = 'chrome';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /crios\\/(\\d+)/);\n  } else if (userAgent.indexOf('fxios') > -1) {\n    hints.browser = 'firefox';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /fxios\\/(\\d+)/);\n  } else if (userAgent.indexOf('firefox') > -1) {\n    hints.browser = 'firefox';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /rv:(\\d+)/);\n  } else if (userAgent.indexOf('safari') > -1) {\n    hints.browser = 'safari';\n    hints.browserMajorVersion = parseMajorVersion(userAgent, /version\\/(\\d+)/);\n  }\n\n  return hints;\n}\n\nfunction parseMajorVersion(userAgent: string, majorVersionPattern: RegExp): number {\n  let majorVer;\n  const matches = userAgent.match(majorVersionPattern);\n  if (matches) {\n    const majorVerString = matches[1];\n    if (majorVerString) {\n      majorVer = parseInt(majorVerString);\n    }\n  }\n  return majorVer ?? -1;\n}\n"],"names":[],"mappings":";;;;AA2BA,MAAM,kBAAkB,GAAgB;AACtC,IAAA,OAAO,EAAE,SAAS;IAClB,mBAAmB,EAAE,CAAC,CAAC;AACvB,IAAA,UAAU,EAAE,SAAS;AACrB,IAAA,QAAQ,EAAE,SAAS;IACnB,eAAe,EAAE,cAAc,IAAI,MAAM;IACzC,QAAQ,EAAE,MAAA,MAAM,CAAC,UAAU,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,MAAA,EAAA,0CAA0C,EAAE,OAAO;CAClF,CAAC;AAEF,IAAI,iBAA8B,CAAC;AAE7B,SAAU,cAAc,CAAC,QAAiB,EAAA;;;AAG9C,IAAA,IAAI,iBAAiB,KAAK,SAAS,IAAI,QAAQ,EAAE;AAC/C,QAAA,IAAI,KAAkB,CAAC;AACvB,QAAA,MAAM,aAAa,GAAI,SAAiB,CAAC,eAAe,CAAoB,CAAC;AAC7E,QAAA,IAAI,aAAa,EAAE;AACjB,YAAA,KAAK,GAAG,yBAAyB,CAAC,aAAa,CAAC,CAAC;AAClD,SAAA;AAAM,aAAA;AACL,YAAA,KAAK,GAAG,2BAA2B,CAAC,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,QAAQ,GAAI,SAAS,CAAC,SAAS,CAAC,CAAC;AACtE,SAAA;;;QAID,IAAI,CAAC,QAAQ,EAAE;YACb,iBAAiB,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAK,CAAE,CAAC;AACjC,YAAA,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAClC,SAAA;;AAEI,aAAA;AACH,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;AACF,KAAA;AACD,IAAA,OAAO,iBAAiB,CAAC;AAC3B,CAAC;AAED,SAAS,yBAAyB,CAAC,aAA8B,EAAA;AAC/D,IAAA,MAAM,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,kBAAkB,CAAE,CAAC;;AAGxC,IAAA,KAAK,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,EAAE;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAChC,YAAA,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;AAC1B,SAAA;aAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;AACrC,YAAA,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;AACxB,SAAA;AACD,QAAA,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,EAAE;YAC/B,KAAK,CAAC,mBAAmB,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACjD,MAAM;AACP,SAAA;AACF,KAAA;;IAGD,MAAM,QAAQ,GAAG,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IACtD,IAAI,QAAQ,KAAK,SAAS,EAAE;AAC1B,QAAA,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC5B,KAAA;SAAM,IAAI,QAAQ,KAAK,SAAS,EAAE;AACjC,QAAA,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC3B,QAAA,KAAK,CAAC,UAAU,GAAG,aAAa,CAAC,MAAM,GAAG,OAAO,GAAG,QAAQ,CAAC;AAC9D,KAAA;SAAM,IAAI,QAAQ,KAAK,OAAO,EAAE;AAC/B,QAAA,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;AACxB,KAAA;;AAED;;;;;;;;;;;AAWE;AACF,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,2BAA2B,CAAC,SAAiB,EAAA;AACpD,IAAA,MAAM,KAAK,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,kBAAkB,CAAE,CAAC;;AAGxC,IAAA,SAAS,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;;IAGpC,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AACpC,QAAA,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;AACvB,QAAA,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC;AAC5B,KAAA;SAAM,IACL,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC7B,SAAS,CAAC,QAAQ,KAAK,UAAU,IAAK,SAAiB,CAAC,YAAY,CAAC,CAAC,EACvE;AACA,QAAA,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;AACvB,QAAA,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;AAC7B,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;AACxC,QAAA,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;AACxB,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;AAC5C,QAAA,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC5B,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;AACxC,QAAA,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC5B,KAAA;;IAGD,IAAI,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;AACjC,QAAA,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;QACvB,KAAK,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;AACxE,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3C,QAAA,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;QACzB,KAAK,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAC3E,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1C,QAAA,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;QACzB,KAAK,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC1E,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE;AAC1C,QAAA,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC;QAC1B,KAAK,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AAC1E,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;AAC5C,QAAA,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC;QAC1B,KAAK,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AACtE,KAAA;SAAM,IAAI,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3C,QAAA,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC;QACzB,KAAK,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AAC5E,KAAA;AAED,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;AAED,SAAS,iBAAiB,CAAC,SAAiB,EAAE,mBAA2B,EAAA;AACvE,IAAA,IAAI,QAAQ,CAAC;IACb,MAAM,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AACrD,IAAA,IAAI,OAAO,EAAE;AACX,QAAA,MAAM,cAAc,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAClC,QAAA,IAAI,cAAc,EAAE;AAClB,YAAA,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;AACrC,SAAA;AACF,KAAA;IACD,OAAO,QAAQ,aAAR,QAAQ,KAAA,KAAA,CAAA,GAAR,QAAQ,GAAI,CAAC,CAAC,CAAC;AACxB;;;;;;;"}