{"version":3,"file":"UNSAFE_Icon.js","sources":["../../src/UNSAFE_Icon/Icon.tsx","../../src/UNSAFE_Icon/withDirectionIcon.tsx","../../src/UNSAFE_Icon/withThemeIcon.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { JSX } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\ntype IntrinsicProps = JSX.SVGAttributes<SVGSVGElement>;\n\ntype Props = Pick<IntrinsicProps, 'viewBox' | 'children'> & {\n  /**\n   * The size of the component. Defaults to '1em', which means the font size of the parent is used.\n   */\n  size?: keyof typeof sizeStyles;\n  /**\n   * The color of the component. Defaults to 'currentColor', which behaves like the CSS 'currentColor' value.\n   */\n  color?: keyof typeof colorStyles;\n  /**\n   * A label to be used for accessibility purposes.\n   */\n  accessibleLabel?: string;\n};\n\nexport const Icon = ({\n  size = '1em',\n  color = 'currentColor',\n  accessibleLabel = '',\n  viewBox = 'none',\n  children\n}: Props) => (\n  <Svg\n    height=\"1em\"\n    width=\"1em\"\n    viewBox={viewBox}\n    accessibleLabel={accessibleLabel}\n    class={classNames([colorStyles[color], sizeStyles[size]])}>\n    {children}\n  </Svg>\n);\n\ntype BaseSvgProps = Pick<IntrinsicProps, 'height' | 'width' | 'viewBox' | 'class' | 'children'>;\ntype SvgProps = BaseSvgProps & {\n  accessibleLabel: string;\n};\n\nconst Svg = ({ accessibleLabel, ...otherProps }: SvgProps) =>\n  accessibleLabel !== '' ? (\n    <SemanticSvg accessibleLabel={accessibleLabel} {...otherProps} />\n  ) : (\n    <DecorativeSvg {...otherProps} />\n  );\n\nconst DecorativeSvg = (props: BaseSvgProps) => <svg {...props} />;\n\n// TODO: When we're able to, implement Preact tooltips instead,\n// remove the title element, and set an aria-label on the svg.\n// See JET-50716\nconst SemanticSvg = ({ accessibleLabel, children, ...props }: SvgProps) => (\n  <svg role=\"img\" {...props}>\n    <title>{accessibleLabel}</title>\n    {children}\n  </svg>\n);\n\n// TODO: Remove this and refactor as necessary to uptake\n// the dimensions type and values when they're available.\n// See JET-50717\nconst sizeStyles = {\n  '1em': cssProps`${{\n    fontSize: '1em'\n  }}`,\n  '1x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-1x)'\n  }}`,\n  '2x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)'\n  }}`,\n  '3x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-3x)'\n  }}`,\n  '4x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x)'\n  }}`,\n  '5x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-5x)'\n  }}`,\n  '6x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-6x)'\n  }}`,\n  '7x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-7x)'\n  }}`,\n  '8x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-8x)'\n  }}`,\n  '9x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-9x)'\n  }}`,\n  '10x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-10x)'\n  }}`,\n  '11x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-11x)'\n  }}`,\n  '12x': cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-12x)'\n  }}`\n};\n\nconst colorStyles = {\n  primary: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-primary)'\n  }}`,\n  secondary: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-secondary)'\n  }}`,\n  disabled: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)'\n  }}`,\n  danger: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-danger-3)'\n  }}`,\n  warning: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-warning-3)'\n  }}`,\n  success: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-success-3)'\n  }}`,\n  info: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-info-3)'\n  }}`,\n  currentColor: cssProps`${{\n    color: 'currentColor'\n  }}`\n};\n","import { ComponentProps } from 'preact';\nimport { Icon } from './Icon';\nimport { useUser } from '../hooks/UNSAFE_useUser';\n\ntype Props = Omit<ComponentProps<typeof Icon>, 'viewBox'>;\n\n// Returns a component that renders one of the given icon components based on reading direction\nexport const withDirectionIcon = (LtrIcon: typeof Icon, RtlIcon: typeof Icon) => {\n  const { direction } = useUser();\n  return (props: Props) => {\n    return direction === 'ltr' ? <LtrIcon {...props} /> : <RtlIcon {...props} />;\n  };\n};\n","import { ComponentProps } from 'preact';\nimport { Icon } from './Icon';\nimport { RootTheme } from '../UNSAFE_Environment';\nimport { useTheme } from '../hooks/UNSAFE_useTheme';\n\ntype Props = Omit<ComponentProps<typeof Icon>, 'viewBox'>;\n\ntype ThemeIcons = Record<RootTheme['name'], typeof Icon>;\n\n// Returns a component that renders one of the given icon components based on theme\nexport const withThemeIcon = (themeIcons: ThemeIcons) => {\n  const { name } = useTheme();\n  return (props: Props) => {\n    const Component = themeIcons[name];\n    return <Component {...props} />;\n  };\n};\n"],"names":["Icon","size","color","accessibleLabel","viewBox","children","_jsx","Svg","Object","assign","height","width","class","classNames","colorStyles","sizeStyles","_a","otherProps","__rest","DecorativeSvg","props","SemanticSvg","_jsxs","role"],"mappings":";;;;;;;;;;;;;AA4BA,MAAAA,IAAA,GAAA,CAAA;AAAAC,EAAAA,IAAA,GAAA,KAAA;AAAAC,EAAAA,KAAA,GAAA,cAAA;AAAAC,EAAAA,eAAA,GAAA,EAAA;AAAAC,EAAAA,OAAA,GAAA,MAAA;AAAAC,EAAAA,QAAAA;AAAA,CAAA,KAAAC,GAAA,CAAAC,GAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,EAAAA,MAAA,EAAA,KAAA;AAAAC,EAAAA,KAAA,EAAA,KAAA;AAAAP,EAAAA,OAAA,EAAAA,OAAA;AAAAD,EAAAA,eAAA,EAAAA,eAAA;AAAAS,EAAAA,KAAA,EAAAC,UAAA,CAAA,CAAAC,WAAA,CAAAZ,KAAA,CAAA,EAAAa,UAAA,CAAAd,IAAA,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA;AAAAI,EAAAA,QAAA,EAAAA,QAAAA;AAAA,CAAA,CAAA,EAAA;;AAsBA,MAAAE,GAAA,GAAAS,EAAA,IAAA;EAAa,IAAA;AAAAb,IAAAA,eAAAA;AAAA,GAAA,GAAAa,EAAA;MAAAC,UAAA,GAAAC,MAAA,CAAAF,EAAA,EAAA,CAAA,iBAAA,CAAA,CAAA,CAAA;;;;;CAAb,CAAA;;AAOA,MAAAG,aAAA,GAAAC,KAAA,IAAAd,GAAA,CAAA,KAAA,EAAAE,MAAA,CAAAC,MAAA,CAAA,EAAA,EAAAW,KAAA,CAAA,CAAA;AAGA;AACA;;;AACA,MAAAC,WAAA,GAAAL,EAAA,IAAA;;;;;;;AAA2E,EAAA,OAAAM,IAAA,CAAA,KAAA,EAAAd,MAAA,CAAAC,MAAA,CAAA;AAAAc,IAAAA,IAAA,EAAA,KAAA;GAAA,EAAAH,KAAA,EAAA;AAAAf,IAAAA,QAAA,EAAA,CAAAC,GAAA,CAAA,OAAA,EAAA;AAAAD,MAAAA,QAAA,EAAAF,eAAAA;KAAA,CAAA,EAAAE,QAAA,CAAA;AAAA,GAAA,CAAA,CAAA,CAAA;CAA3E;AAQA;AACA;;;AACA,MAAAU,UAAA,GAAA;OAAA,EAAA,SAAA;MAAA,EAAA,QAAA;MAAA,EAAA,SAAA;MAAA,EAAA,QAAA;MAAA,EAAA,QAAA;MAAA,EAAA,QAAA;MAAA,EAAA,SAAA;MAAA,EAAA,QAAA;MAAA,EAAA,SAAA;MAAA,EAAA,SAAA;OAAA,EAAA,OAAA;OAAA,EAAA,SAAA;;AAAA,CAAA,CAAA;AA0CA,MAAAD,WAAA,GAAA;WAAA,QAAA;aAAA,QAAA;YAAA,SAAA;UAAA,SAAA;WAAA,QAAA;WAAA,SAAA;QAAA,SAAA;;AAAA,CAAA;;AC5GA;MACa,iBAAiB,GAAG,CAAC,OAAoB,EAAE,OAAoB,KAAI;AAC9E,IAAA,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,CAAC;IAChC,OAAO,CAAC,KAAY,KAAI;AACtB,QAAA,OAAO,SAAS,KAAK,KAAK,GAAGR,IAAC,OAAO,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAK,CAAI,CAAA,GAAGA,GAAA,CAAC,OAAO,EAAK,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,EAAI,CAAC;AAC/E,KAAC,CAAC;AACJ;;ACHA;AACa,MAAA,aAAa,GAAG,CAAC,UAAsB,KAAI;AACtD,IAAA,MAAM,EAAE,IAAI,EAAE,GAAG,QAAQ,EAAE,CAAC;IAC5B,OAAO,CAAC,KAAY,KAAI;AACtB,QAAA,MAAM,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;AACnC,QAAA,OAAOA,GAAC,CAAA,SAAS,EAAK,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,EAAI,CAAC;AAClC,KAAC,CAAC;AACJ;;;;;;;"}