{"version":3,"file":"UNSAFE_SelectMultiple.js","sources":["../../src/UNSAFE_SelectMultiple/itemTextUtils.ts","../../src/UNSAFE_SelectMultiple/DefaultList.tsx","../../src/UNSAFE_SelectMultiple/eventUtils.ts","../../src/UNSAFE_SelectMultiple/Dropdown.tsx","../../src/UNSAFE_SelectMultiple/DropdownArrow.tsx","../../src/UNSAFE_SelectMultiple/DropdownList.tsx","../../src/UNSAFE_SelectMultiple/SelectedValuesCount.tsx","../../src/UNSAFE_SelectMultiple/useDisplayValues.ts","../../src/UNSAFE_SelectMultiple/useSelectedOnlyData.ts","../../src/UNSAFE_SelectMultiple/useSelectMultiple.ts","../../src/UNSAFE_SelectMultiple/SelectMultiple.tsx","../../src/UNSAFE_SelectMultiple/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { Logger } from '../utils/UNSAFE_logger';\n\ntype ItemTextFunctionType<K, D> = (itemContext: Item<K, D>) => string;\nexport type ItemTextType<K, D> = keyof D | ItemTextFunctionType<K, D>;\n\nexport function renderItemText<K, D>(item: Item<K, D>, itemText: ItemTextType<K, D>) {\n  // if item-text is a string and the data has the specified field, return it;\n  // otherwise log an error\n  if (typeof itemText === 'string') {\n    if ((item.data as any)?.hasOwnProperty(itemText)) {\n      return item.data[itemText];\n    }\n    Logger.error('SelectMultiple: itemText specifies field that does not exist: ' + itemText);\n    // return undefined if the field doesn't exist\n    return undefined;\n  }\n  // if item-text is a function, call it to create a display label\n  return (itemText as ItemTextFunctionType<K, D>)(item);\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { DataState, ListItemContext } from '../UNSAFE_Collection';\nimport { HighlightText } from '../UNSAFE_HighlightText';\nimport { ListView } from '../UNSAFE_ListView';\nimport { ItemTextType, renderItemText } from './itemTextUtils';\n\nconst itemStyles = cssProps`${{\n  height: '20px',\n  paddingBottom: '0.75rem',\n  paddingLeft: '0.75rem',\n  paddingRight: '0.75rem',\n  paddingTop: '0.75rem'\n}}`;\n\ntype PickedPropsFromListView = Pick<\n  ComponentProps<typeof ListView>,\n  'accessibleSummary' | 'onCurrentKeyChange' | 'onSelectionChange' | 'viewportConfig'\n>;\n\ntype Props<K extends string | number, D extends Record<string, any>> = PickedPropsFromListView & {\n  itemText: ItemTextType<K, D>;\n  // props from ListView that we constrain or unconstrain\n  currentKey?: K;\n  data?: DataState<K, D> | null;\n  onLoadRange?: ComponentProps<typeof ListView>['onLoadRange'];\n  searchText?: string;\n  selectedKeys?: Set<K>;\n};\n\nconst noOp = () => {};\n\nexport function DefaultList<K extends string | number, D extends Record<string, any>>({\n  accessibleSummary,\n  currentKey,\n  data,\n  itemText,\n  onCurrentKeyChange,\n  onLoadRange = noOp,\n  onSelectionChange,\n  searchText,\n  selectedKeys\n}: Props<K, D>) {\n  const listItemRenderer = useCallback(\n    (listItemContext: ListItemContext<K, D>) => {\n      const itemContext = {\n        data: listItemContext.data,\n        key: listItemContext.metadata.key,\n        metadata: listItemContext.metadata\n      };\n      const renderedItemText = renderItemText(itemContext, itemText) as string;\n      return (\n        <div class={itemStyles}>\n          <HighlightText matchText={searchText}>{renderedItemText}</HighlightText>\n        </div>\n      );\n    },\n    [itemText, searchText]\n  );\n\n  return (\n    <ListView<K, D>\n      accessibleSummary={accessibleSummary}\n      currentKey={currentKey}\n      data={data ?? null}\n      gridlines=\"hidden\"\n      onCurrentKeyChange={onCurrentKeyChange}\n      onLoadRange={onLoadRange}\n      onSelectionChange={onSelectionChange}\n      selectedKeys={{ all: false, keys: selectedKeys ?? new Set<K>() }}\n      selectionMode=\"multiple\">\n      {(context: ListItemContext<K, D>) => listItemRenderer(context)}\n    </ListView>\n  );\n}\n","export const KEYS = {\n  TAB: 'Tab',\n  ENTER: 'Enter',\n  ESC: 'Escape',\n  SPACE: 'Space',\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n  SHIFT_LEFT: 'ShiftLeft',\n  SHIFT_RIGHT: 'ShiftRight',\n  CTRL_LEFT: 'ControlLeft',\n  CTRL_RIGHT: 'ControlRight',\n  ALT_LEFT: 'AltLeft',\n  ALT_RIGHT: 'AltRight',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n  HOME: 'Home',\n  END: 'End',\n  BACKSPACE: 'Backspace',\n  DELETE: 'Delete'\n};\n\nexport const isControlKey = (event: KeyboardEvent) => {\n  switch (event.code) {\n    case KEYS.SHIFT_LEFT:\n    case KEYS.SHIFT_RIGHT:\n    case KEYS.CTRL_LEFT:\n    case KEYS.CTRL_RIGHT:\n    case KEYS.ALT_LEFT:\n    case KEYS.ALT_RIGHT:\n      return true;\n    default:\n      return event.metaKey || event.ctrlKey;\n  }\n};\n\nexport const isFunctionKey = (event: KeyboardEvent) => {\n  return /\\bF([1-9]|1[0-2])\\b/i.test(event.code);\n};\n\nexport const isControlOrFunctionKey = (event: KeyboardEvent) => {\n  return isControlKey(event) || isFunctionKey(event);\n};\n\nexport const isSimpleClick = (event: MouseEvent) => {\n  return event.button === 0 && !event.ctrlKey;\n};\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\nimport { MutableRef, useCallback } from 'preact/hooks';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { Floating } from '../UNSAFE_Floating';\nimport { Layer } from '../UNSAFE_Layer';\nimport useOutsideClick from '../hooks/UNSAFE_useOutsideClick';\nimport { isControlOrFunctionKey, KEYS } from './eventUtils';\n\nconst rootStyles = {\n  base: cssProps`${{\n    boxSizing: 'border-box',\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-popup-bg-color)',\n    border: '1px solid var(--oj-c-PRIVATE-DO-NOT-USE-popup-border-color)',\n    borderRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-border-radius-md)',\n    boxShadow: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-dropdown-box-shadow)',\n\n    display: 'flex',\n    flexDirection: 'column'\n  }}`\n};\n\ntype Props = {\n  anchorRef: MutableRef<HTMLElement | null>;\n  children?: ComponentChildren;\n  dropdownRef: MutableRef<HTMLElement | null>;\n  id?: string;\n  isOpen?: boolean;\n  onAutoDismiss?: (event?: Event) => void;\n};\n\nexport function Dropdown({ anchorRef, children, dropdownRef, id, isOpen, onAutoDismiss }: Props) {\n  const handleAutoDismiss = useCallback(\n    (event: Event) => {\n      onAutoDismiss?.(event);\n    },\n    [onAutoDismiss]\n  );\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.defaultPrevented || isControlOrFunctionKey(event)) {\n        return;\n      }\n\n      switch (event.code) {\n        case KEYS.ESC:\n        case KEYS.TAB:\n          handleAutoDismiss(event);\n          break;\n      }\n    },\n    [handleAutoDismiss]\n  );\n\n  useOutsideClick({\n    isDisabled: !isOpen,\n    ref: [anchorRef, dropdownRef],\n    handler: handleAutoDismiss\n  });\n\n  // TODO: get dropdown y (mainAxis) offset from --oj-c-PRIVATE-DO-NOT-USE-private-core-global-dropdown-offset\n  const offsetValue = { mainAxis: 4, crossAxis: 0 };\n\n  const inlineStyle = {\n    minWidth: `${anchorRef.current?.offsetWidth}px`\n  };\n\n  return !isOpen ? null : (\n    <Layer>\n      <Floating\n        anchorRef={anchorRef}\n        ref={dropdownRef}\n        placement=\"bottom-start\"\n        offsetValue={offsetValue}>\n        <div class={rootStyles.base} id={id} style={inlineStyle} onKeyDown={handleKeyDown}>\n          {children}\n        </div>\n      </Floating>\n    </Layer>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback } from 'preact/hooks';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { usePress } from '../hooks/UNSAFE_usePress';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\ntype Props = {\n  isDisabled?: boolean;\n  onClick?: () => void;\n  size?: 'md' | 'sm';\n};\n\n// TODO: replace this with var(--oj-button-height) once it is available\nconst ojButtonHeight = '2.75rem';\n// TODO: replace this with var(--oj-button-sm-height) once it is available\nconst ojButtonSmHeight = '2.25rem';\n// TODO: replace this with var(--oj-button-border-radius) once it is available\nconst ojButtonBorderRadius = 'var(--oj-c-PRIVATE-DO-NOT-USE-core-border-radius-md)';\n// TODO: replace this with var(--oj-button-borderless-chrome-text-color) once it is available\nconst ojButtonBorderlessChromeTextColor = 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-primary)';\n// TODO: replace this with var (--oj-button-borderless-chrome-text-color-disabled) once it is available\nconst ojButtonBorderlessChromeTextColorDisabled =\n  'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-disabled)';\n// TODO: replace this with var(--oj-button-borderless-chrome-text-color-hover) once it is available\nconst ojButtonBorderlessChromeTextColorHover =\n  'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-primary)';\n// TODO: replace this with var(--oj-button-borderless-chrome-bg-color-hover) once it is available\nconst ojButtonBorderlessChromeBgColorHover = 'var(--oj-c-PRIVATE-DO-NOT-USE-core-bg-color-hover)';\n// TODO: replace this with var(--oj-button-borderless-chrome-border-color-hover) once it is available\nconst ojButtonBorderlessChromeBorderColorHover = 'transparent';\n\nconst rootStyles = {\n  base: cssProps`${{\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n\n    paddingInline: 0,\n    paddingBlock: 0,\n    borderRadius: ojButtonBorderRadius,\n    color: ojButtonBorderlessChromeTextColor\n  }}`,\n\n  sizeMd: cssProps`${{\n    width: ojButtonHeight,\n    height: ojButtonHeight,\n    lineHeight: ojButtonHeight\n  }}`,\n\n  sizeSm: cssProps`${{\n    width: ojButtonSmHeight,\n    height: ojButtonSmHeight,\n    lineHeight: ojButtonSmHeight\n  }}`,\n\n  enabled: cssProps`${{\n    cursor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-cursor-clickable)',\n\n    '&:hover': {\n      color: ojButtonBorderlessChromeTextColorHover,\n      backgroundColor: ojButtonBorderlessChromeBgColorHover,\n      borderColor: ojButtonBorderlessChromeBorderColorHover\n    }\n  }}`,\n\n  disabled: cssProps`${{\n    color: ojButtonBorderlessChromeTextColorDisabled\n  }}`\n};\n\nconst noop = () => {};\n\nexport function DropdownArrow({ isDisabled = false, onClick, size = 'md' }: Props) {\n  const preventDefault = useCallback((event: Event) => {\n    event.preventDefault();\n  }, []);\n  const { pressProps } = usePress(onClick ?? noop, { isDisabled });\n\n  const styleClasses = classNames([\n    rootStyles.base,\n    size === 'sm' ? rootStyles.sizeSm : rootStyles.sizeMd,\n    isDisabled ? rootStyles.disabled : rootStyles.enabled\n  ]);\n\n  return (\n    <span\n      aria-hidden=\"true\"\n      class={styleClasses}\n      tabIndex={-1}\n      onMouseDown={preventDefault}\n      {...pressProps}>\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n          d=\"m6.00803369 8.9999991c3.96646621 4 5.94968971 6 5.94967061 6-.0000192 0 1.9832044-2 5.9496706-6z\"\n          // fill=\"#100f0e\"\n          fill=\"currentColor\"\n          fill-rule=\"evenodd\"\n        />\n      </svg>\n    </span>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentChildren } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\nconst rootStyles = {\n  base: cssProps`${{\n    paddingLeft: '0',\n    paddingRight: '0',\n    margin: '1px 0 2px 0',\n    position: 'relative',\n    overflowX: 'hidden',\n    overflowY: 'auto',\n    // '-webkit-tap-highlight-color': 'transparent',\n    maxHeight: '400px',\n    boxSizing: 'border-box',\n\n    display: 'flex',\n    flexDirection: 'column'\n  }}`,\n\n  // TODO: This should really be applied directly to the child ListView so that the content\n  // displays under the padding when scrolled, but we can't apply styles to the child collection.\n  // TODO: Also need to figure out how to determine whether the collection is a ListView (in\n  // the collectionRenderer case) in order to apply this styling.\n  listView: cssProps`${{\n    paddingTop: '.5rem',\n    paddingBottom: '.5rem'\n  }}`,\n\n  loading: cssProps`${{\n    minHeight: '10rem'\n  }}`\n};\n\ntype Props = {\n  children?: ComponentChildren;\n  isLoading?: boolean;\n};\n\nexport function DropdownList({ children, isLoading = false }: Props) {\n  const styleClasses = classNames([\n    rootStyles.base,\n    rootStyles.listView,\n    isLoading && rootStyles.loading\n  ]);\n  return <div class={styleClasses}>{children}</div>;\n}\n","import { ComponentProps } from 'preact';\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { Chip } from '../UNSAFE_Chip';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\n\nconst rootStyles = cssProps`${{\n  display: 'inline-flex'\n}}`;\n\ntype PickedPropsFromChip = Pick<\n  ComponentProps<typeof Chip>,\n  'accessibleLabel' | 'isDisabled' | 'isSelected' | 'onToggle'\n>;\n\ntype Props = PickedPropsFromChip & {\n  count?: number;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  onKeyUp?: (event: KeyboardEvent) => void;\n  onMouseDown?: (event: MouseEvent) => void;\n};\n\n// This component renders a badge showing the number of selected values\nexport function SelectedValuesCount({\n  accessibleLabel,\n  count = 0,\n  onKeyDown,\n  onKeyUp,\n  onMouseDown,\n  ...passThroughProps\n}: Props) {\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const instructions = translations.selectMultiple_showSelectedValues();\n  const accLabel = accessibleLabel ? `${accessibleLabel}. ` : '';\n\n  const ninetyNinePlus = translations.selectMultiple_countPlus({ COUNT: `99` });\n  // The Chip shows the number of values selected or 99+ if the number is over 99.\n  const chipCount = count > 99 ? `${ninetyNinePlus}` : `${count}`;\n  // The screenreader will hear what the number of selected values is along with instructions\n  // like Click to see the full list.\n  const valuesSelectedText = translations.selectMultiple_valuesSelected({\n    VALUE_COUNT: `${count}`\n  });\n  const label = `${accLabel}${valuesSelectedText} ${instructions}`;\n  return (\n    <div class={rootStyles} onKeyDown={onKeyDown} onKeyUp={onKeyUp} onMouseDown={onMouseDown}>\n      <Chip accessibleLabel={label} {...passThroughProps}>\n        {chipCount}\n      </Chip>\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useMemo } from 'preact/hooks';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { ItemTextType, renderItemText } from './itemTextUtils';\n\nexport function useDisplayValues<K, D>(\n  itemText: ItemTextType<K, D>,\n  valueItems?: Item<K, D>[]\n): string {\n  // create the text displayed in the field from the selected values\n  const concatenatedDisplayValues = useMemo(() => {\n    if (!valueItems) {\n      return '';\n    }\n    const displayValues = _createDisplayValues(itemText, valueItems);\n    const concatDisplayValues = _concatDisplayValues(displayValues);\n    return concatDisplayValues;\n  }, [valueItems, itemText]);\n\n  return concatenatedDisplayValues;\n}\n\nfunction _concatDisplayValues(displayValues: Set<string>) {\n  return Array.from(displayValues.values()).join(', ');\n}\n\nfunction _createDisplayValues<K, D>(itemText: ItemTextType<K, D>, selectedItems?: Item<K, D>[]) {\n  const arValues = selectedItems ? [...selectedItems?.values()] : [];\n  const mapFunc = (itemContext: Item<K, D>) => renderItemText(itemContext, itemText);\n  const mappedArray = arValues.map(mapFunc);\n  return new Set<string>(mappedArray as string[]);\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useMemo } from 'preact/hooks';\nimport { DataState } from 'src/UNSAFE_Collection';\nimport { Item } from '../utils/UNSAFE_dataProvider';\n\ntype Props<K, D> = {\n  isDropdownSelectedOnlyView?: boolean;\n  valueItems?: Item<K, D>[];\n};\n\n/**\n * Get the data to show in the dropdown for the selected-only view.\n * @param isDropdownSelectedOnlyView Whether the component is showing only selected\n * values in the dropdown: true if so, false if not.\n * @param valueItems The keys, data, and optional metadata for the selected values.\n * @returns An object with data and onLoadRange properties that can be passed on to the\n * list in the dropdown.\n */\nexport function useSelectedOnlyData<K, D>({ isDropdownSelectedOnlyView, valueItems }: Props<K, D>) {\n  // Need to specify type of useMemo here so the return statement below doesn't show a type error\n  // related to the sizePrecision prop on DataState:\n  //   Type 'string' is not assignable to type '\"exact\" | \"atLeast\"'.\n  // Note that useMemo here only depends on isDropdownSelectedOnlyView because we only want to\n  // recalculate when that value changes.  While the selected only view is shown, we want the\n  // data set to remain static with the set of valueItems as of the time the view was changed to\n  // only show selected items so that the user can deselect and reselect items.\n  // If useMemo depended on the valueItems too, then the data set would change as the user\n  // deselected items, which means those items would disappear from the dropdown and the user\n  // could not reselect them.\n  const selectedOnlyViewDataState = useMemo<DataState<K, D> | undefined>(() => {\n    return !isDropdownSelectedOnlyView || !valueItems || valueItems.length === 0\n      ? undefined\n      : {\n          offset: 0,\n          totalSize: valueItems?.length ?? 0,\n          sizePrecision: 'exact',\n          data: valueItems.map((valueItem: Item<K, D>) => {\n            return { data: valueItem.data, metadata: valueItem.metadata ?? { key: valueItem.key } };\n          })\n        };\n  }, [isDropdownSelectedOnlyView]);\n\n  return {\n    data: selectedOnlyViewDataState,\n    onLoadRange: undefined\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps } from 'preact';\nimport { MutableRef, useCallback, useEffect, useRef, useState } from 'preact/hooks';\nimport { CurrentKeyDetail, DataState, SelectionDetail } from '../UNSAFE_Collection';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { ValueUpdateDetail } from '../utils/UNSAFE_valueUpdateDetail';\nimport { isControlOrFunctionKey, isSimpleClick, KEYS } from './eventUtils';\nimport { SelectMultiple } from './SelectMultiple';\nimport { SelectedValuesCount } from './SelectedValuesCount';\nimport { useSelectedOnlyData } from './useSelectedOnlyData';\n\ntype PickedPropsFromSelectMultiple = Pick<\n  ComponentProps<typeof SelectMultiple>,\n  'isDisabled' | 'isReadonly' | 'onFilter' | 'onLoadRange'\n>;\ntype UseSelectMultipleProps<K, D> = PickedPropsFromSelectMultiple & {\n  data?: DataState<K, D> | null;\n  inputRef: MutableRef<HTMLInputElement>;\n  isFocused?: boolean;\n  onCommit: (detail: ValueUpdateDetail<Set<K>>) => void;\n  valueItems?: Item<K, D>[];\n};\n\ntype SelectedValuesCountToggleType = ComponentProps<typeof SelectedValuesCount>['onToggle'];\ntype SelectedValuesCountToggleDetailType = Parameters<\n  Exclude<SelectedValuesCountToggleType, undefined>\n>[0];\n\n/**\n * Hook that manages SelectMultiple state and behavior.  This hook creates state variables and\n * event listeners, returning properties to apply to components internally rendered by\n * SelectMultiple, as well as state information.\n *\n * @param data Specifies data for the dropdown list.\n * @param inputRef Ref to the input element.\n * @param isDisabled Specifies whether the component is disabled.\n * @param isFocused Specifies whether the component has focus.\n * @param isReadonly Specifies whether the component is readonly.\n * @param onCommit Callback invoked when the selected values are committed.\n * @param onFilter Callback function to trigger loading data for the dropdown list,\n * which may or may not be filtered by user entered text.\n * @param onLoadRange Callback function to handle when the viewport of the dropdown list has\n * changed, including the case where the user scrolls to the end of the list and there are more\n * items to load.  The function should set a new DataState on the component for the specified\n * range.\n * @param valueItems Specifies the keys, data, and optional metadata for the selected values.\n *\n * @returns Properties to apply to internal components that SelectMultiple renders, and component\n * state.\n */\nexport function useSelectMultiple<K, D>({\n  data: propData,\n  inputRef,\n  isDisabled,\n  isFocused,\n  isReadonly,\n  onCommit,\n  onFilter,\n  onLoadRange: propOnLoadRange,\n  valueItems\n}: UseSelectMultipleProps<K, D>) {\n  const mainFieldRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [isDropdownSelectedOnlyView, setDropdownSelectedOnlyView] = useState(false);\n  const [currentRow, setCurrentRow] = useState<{ rowKey?: K }>({\n    rowKey: undefined\n  });\n  const [selectedKeys, setSelectedKeys] = useState<Set<K>>();\n  const [isUserFiltering, setUserFiltering] = useState(false);\n  const [userInput, setUserInput] = useState<string>();\n  const [searchText, setSearchText] = useState<string>();\n\n  const selectedValuesCount = valueItems?.length;\n  const hasSelectedValuesCount =\n    (selectedValuesCount !== undefined && selectedValuesCount > 0) || isDropdownSelectedOnlyView;\n\n  // when the array of valueItems changes, pull out the new set of selectedKeys\n  useEffect(() => {\n    const keys = valueItems?.reduce((accumKeys, currentItem) => {\n      accumKeys.add(currentItem.key);\n      return accumKeys;\n    }, new Set<K>());\n    setSelectedKeys(keys);\n  }, [valueItems]);\n\n  const chipRef = useRef<HTMLElement | null>(null);\n  useEffect(() => {\n    chipRef.current =\n      hasSelectedValuesCount && mainFieldRef.current\n        ? mainFieldRef.current.querySelector('[tabindex=\"0\"]')\n        : null;\n  }, [hasSelectedValuesCount, isDisabled, isReadonly]);\n\n  // show only the selected values in the dropdown if isDropdownSelectedOnlyView is true,\n  // otherwise show the full data set\n  // TODO: We may need to revisit this for hierarchical data because the selected valueItems\n  // won't have any information about ancestor group nodes, and we should probably show selected\n  // items in context within the hierarchy.  Also, the order of the items in the selected-only\n  // view right now follows the order in which they were selected, not the order in which they\n  // would appear in the full data set.  This may be more of a problem for hierarchical data\n  // if items have to appear within the correct group ancestors.  We may need to move\n  // construction of the selected-only DataState out of the component to the consuming code,\n  // and take a callback that we can call as a notification that the app should provide this\n  // special DataState to us (kind of like onLoadRange).  Note that we may also need an\n  // enhancement on the DataProvider API to be able to specify a filterCriterion to filter by\n  // the selected keys through a fetchFirst call, because a regular fetchByKeys call would\n  // still return results in the order in which the keys were specified and would not return\n  // data for the ancestor group nodes.\n  const selectedOnlyDataProps = useSelectedOnlyData<K, D>({\n    isDropdownSelectedOnlyView,\n    valueItems\n  });\n  const data = isDropdownSelectedOnlyView ? selectedOnlyDataProps.data : propData;\n  const onLoadRange = isDropdownSelectedOnlyView\n    ? selectedOnlyDataProps.onLoadRange\n    : propOnLoadRange;\n\n  const onMouseDown = useCallback(\n    (event: MouseEvent) => {\n      // const target = event.target as HTMLElement;\n      if (event.defaultPrevented || !isSimpleClick(event)) {\n        return;\n      }\n      if (!isDropdownOpen) {\n        setDropdownOpen(true);\n      }\n      // this is needed to focus the input when clicking on the inside label when there is no\n      // value;  otherwise the component looks focused but doesn't actually have physical focus\n      setTimeout(function () {\n        inputRef.current?.focus();\n      }, 0);\n    },\n    [isDropdownOpen, setDropdownOpen]\n  );\n\n  const handleDropdownArrowClick = useCallback(() => {\n    setDropdownOpen(!isDropdownOpen);\n\n    // focus the input so that if the user Tabs afterwards, it loses focus and the dropdown closes\n    inputRef.current?.focus();\n  }, [isDropdownOpen]);\n\n  const handleDropdownAutoDismiss = useCallback(\n    (event?: Event) => {\n      if (isDropdownOpen) {\n        setDropdownOpen(false);\n\n        if (event?.type === 'keydown') {\n          const keyboardEvent = event as KeyboardEvent;\n          switch (keyboardEvent.code) {\n            case KEYS.ESC:\n              inputRef.current?.focus();\n              break;\n            case KEYS.TAB:\n              // Put focus on an element in the main field, but don't kill the event, so that\n              // the browser can naturally transfer focus to the next focusable item relative\n              // to the element in the main field.\n              if (keyboardEvent.shiftKey || !hasSelectedValuesCount) {\n                inputRef.current?.focus();\n              } else {\n                chipRef.current?.focus();\n              }\n              break;\n          }\n        }\n      }\n    },\n    [hasSelectedValuesCount, isDropdownOpen]\n  );\n\n  const handleUpDownArrowKeys = useCallback(\n    (event: KeyboardEvent) => {\n      if (!isDropdownOpen) {\n        setDropdownOpen(true);\n      } else {\n        // transfer physical focus into the dropdown\n        const firstFocusableElem = dropdownRef.current?.querySelector('[tabindex=\"0\"]');\n        (firstFocusableElem as HTMLElement)?.focus();\n\n        // if there is no current item set, make the first item current\n        if (data !== undefined && currentRow.rowKey === undefined) {\n          setCurrentRow({ rowKey: data?.data?.[0]?.metadata?.key });\n        }\n      }\n\n      // prevent the page from scrolling\n      event.preventDefault();\n    },\n    [currentRow, data, isDropdownOpen]\n  );\n\n  const handleMainFieldKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      // const target = event.target as HTMLElement;\n      // ignore control key and function key\n      if (isControlOrFunctionKey(event)) {\n        return;\n      }\n\n      switch (event.code) {\n        case KEYS.PAGE_UP:\n        case KEYS.PAGE_DOWN:\n          // prevent the page from scrolling\n          event.preventDefault();\n\n          return;\n\n        case KEYS.UP:\n        case KEYS.DOWN:\n          // prevent the page from scrolling\n          event.preventDefault();\n          break;\n\n        case KEYS.TAB:\n          if (isDropdownOpen && (event.shiftKey || (!hasSelectedValuesCount && !event.shiftKey))) {\n            setDropdownOpen(false);\n          }\n          break;\n\n        case KEYS.ESC:\n          if (isDropdownOpen) {\n            setDropdownOpen(false);\n\n            event.preventDefault();\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n    [hasSelectedValuesCount, isDropdownOpen]\n  );\n\n  const handleMainFieldKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      // ignore control key and function key\n      if (isControlOrFunctionKey(event)) {\n        return;\n      }\n\n      switch (event.code) {\n        case KEYS.UP:\n        case KEYS.DOWN:\n          handleUpDownArrowKeys(event);\n          break;\n\n        default:\n          break;\n      }\n    },\n    [handleUpDownArrowKeys]\n  );\n\n  const handleInput = useCallback(\n    (detail: ValueUpdateDetail<string>) => {\n      if (!isDropdownOpen) {\n        setDropdownOpen(true);\n      }\n      setUserFiltering(true);\n      setUserInput(detail.value);\n      const str = detail.value?.trim();\n      setSearchText(str);\n      onFilter?.({ searchText: str });\n    },\n    [isDropdownOpen, onFilter]\n  );\n\n  const handleSelectedValuesCountKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.code) {\n        case KEYS.TAB:\n          if (isDropdownOpen && !event.shiftKey) {\n            setDropdownOpen(false);\n          }\n          break;\n\n        case KEYS.UP:\n        case KEYS.DOWN:\n          // prevent the page from scrolling\n          event.preventDefault();\n          break;\n\n        case KEYS.ESC:\n          if (isDropdownOpen) {\n            setDropdownOpen(false);\n\n            event.preventDefault();\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n    [isDropdownOpen]\n  );\n\n  const handleSelectedValuesCountKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.code) {\n        case KEYS.UP:\n        case KEYS.DOWN:\n          handleUpDownArrowKeys(event);\n          break;\n\n        default:\n          break;\n      }\n    },\n    [handleUpDownArrowKeys]\n  );\n\n  const handleSelectedValuesCountMouseDown = useCallback((event: MouseEvent) => {\n    // call preventDefault so that the dropdown doesn't open showing the full list on mousedown\n    // on the chip before switching to show only the selected values on mouseup when the click\n    // is handled\n    event.preventDefault();\n    // explicitly focus the input because it won't happen naturally due to preventDefault()\n    inputRef.current?.focus();\n  }, []);\n\n  const handleSelectedValuesCountToggle = useCallback(\n    (detail: SelectedValuesCountToggleDetailType) => {\n      if (!isDropdownOpen) {\n        setDropdownOpen(true);\n      }\n\n      const value = detail.value ?? false;\n      if (value !== isDropdownSelectedOnlyView) {\n        setDropdownSelectedOnlyView(value);\n      }\n    },\n    [isDropdownOpen, isDropdownSelectedOnlyView]\n  );\n\n  // when the dropdown closes, automatically turn off isDropdownSelectedOnlyView\n  useEffect(() => {\n    if (!isDropdownOpen && isDropdownSelectedOnlyView) {\n      setDropdownSelectedOnlyView(false);\n    }\n  }, [isDropdownOpen, isDropdownSelectedOnlyView]);\n\n  // TODO: need to specify type <any> for onSelectionChange and onCurrentKeyChange because\n  // otherwise there's an error in SelectMultiple where it renders the DefaultList:\n  // Types of property 'onSelectionChange' are incompatible.\n  //     Type '(detail: SelectionDetail<K>) => void' is not assignable to type '(detail: SelectionDetail<string | number>) => void'.\n  //       Types of parameters 'detail' and 'detail' are incompatible.\n  //         Type 'SelectionDetail<string | number>' is not assignable to type 'SelectionDetail<K>'.\n  //           Type 'string | number' is not assignable to type 'K'.\n  //             'string | number' is assignable to the constraint of type 'K', but 'K' could be instantiated with a different subtype of constraint 'string | number'.\n  const onSelectionChange = useCallback<any>(\n    (detail: SelectionDetail<K>) => {\n      const newKeys = detail.value.keys;\n      // update the selectedKeys so that the selection visual state of the collection\n      // updates immediately while waiting for new valueItems to be set\n      setSelectedKeys(newKeys);\n      // call the onCommit callback so that the consuming code can update the valueItems\n      onCommit?.({ value: newKeys, previousValue: selectedKeys });\n    },\n    [onCommit, selectedKeys]\n  );\n\n  const onCurrentKeyChange = useCallback<any>((detail: CurrentKeyDetail<K>) => {\n    setCurrentRow({ rowKey: detail.value });\n  }, []);\n\n  useEffect(() => {\n    // clear the current item when the dropdown opens\n    if (isDropdownOpen) {\n      setCurrentRow({ rowKey: undefined });\n    }\n    // TODO: when filtering, set the first result of the filtered data set to be the current item\n    // if (isDropdownOpen && data !== undefined && isFiltering) {\n    //   setCurrentRow({ rowKey: data?.data?.[0]?.metadata?.key });\n    // }\n  }, [isDropdownOpen]);\n\n  // the user is not actively filtering if the dropdown is closed and the component doesn't\n  // have focus\n  useEffect(() => {\n    if (!isDropdownOpen && !isFocused && isUserFiltering) {\n      setUserFiltering(false);\n      setUserInput('');\n      setSearchText('');\n    }\n  }, [isDropdownOpen, isFocused, isUserFiltering]);\n\n  // need to call onFilter with undefined searchText when the dropdown opens and the\n  // user is NOT filtering\n  useEffect(() => {\n    if (isDropdownOpen && !isUserFiltering) {\n      onFilter?.({ searchText: undefined });\n    }\n  }, [isDropdownOpen, isUserFiltering]);\n\n  return {\n    collectionProps: {\n      currentKey: currentRow.rowKey,\n      onCurrentKeyChange,\n      onSelectionChange,\n      selectedKeys\n    },\n    data,\n    dropdownArrowEventHandlers: {\n      onClick: handleDropdownArrowClick\n    },\n    dropdownEventHandlers: {\n      onAutoDismiss: handleDropdownAutoDismiss\n    },\n    dropdownRef,\n    hasSelectedValuesCount,\n    inputEventHandlers: {\n      onInput: handleInput,\n      onKeyDown: handleMainFieldKeyDown,\n      onKeyUp: handleMainFieldKeyUp\n    },\n    inputRef,\n    isDropdownOpen,\n    isDropdownSelectedOnlyView,\n    // the field should remain to look focused while the dropdown is open,\n    // in case physical focus is in the dropdown\n    isFocused: isFocused || isDropdownOpen,\n    isUserFiltering,\n    mainFieldRef,\n    mouseProps: isDisabled || isReadonly ? {} : { onMouseDown },\n    onLoadRange,\n    searchText,\n    selectedValuesCountProps: {\n      onKeyDown: handleSelectedValuesCountKeyDown,\n      onKeyUp: handleSelectedValuesCountKeyUp,\n      onMouseDown: handleSelectedValuesCountMouseDown,\n      onToggle: handleSelectedValuesCountToggle\n    },\n    userInput\n  };\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { ComponentProps, Fragment, Ref } from 'preact';\nimport { forwardRef } from 'preact/compat';\nimport { MutableRef } from 'preact/hooks';\nimport { FocusableHandle, useFocusableTextField } from '../hooks/UNSAFE_useFocusableTextField';\nimport { useFormContext } from '../hooks/UNSAFE_useFormContext';\nimport { FormFieldContext } from '../hooks/UNSAFE_useFormFieldContext';\nimport { useLoadingIndicatorTimer } from '../hooks/UNSAFE_useLoadingIndicatorTimer';\nimport { useTextField } from '../hooks/UNSAFE_useTextField';\nimport { DataState } from '../UNSAFE_Collection';\nimport { Flex } from '../UNSAFE_Flex';\nimport { Label } from '../UNSAFE_Label';\nimport { ListView } from '../UNSAFE_ListView';\nimport { LiveRegion } from '../UNSAFE_LiveRegion';\nimport {\n  ReadonlyTextField,\n  ReadonlyTextFieldInput,\n  TextField,\n  TextFieldInput\n} from '../UNSAFE_TextField';\nimport { InlineUserAssistance } from '../UNSAFE_UserAssistance';\nimport { getClientHints } from '../utils/PRIVATE_clientHints';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { Size } from '../utils/UNSAFE_size';\nimport { ValueUpdateDetail } from '../utils/UNSAFE_valueUpdateDetail';\nimport { DefaultList } from './DefaultList';\nimport { Dropdown } from './Dropdown';\nimport { DropdownArrow } from './DropdownArrow';\nimport { DropdownList } from './DropdownList';\nimport { ItemTextType } from './itemTextUtils';\nimport { SelectedValuesCount } from './SelectedValuesCount';\nimport { useDisplayValues } from './useDisplayValues';\nimport { useSelectMultiple } from './useSelectMultiple';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\n\ntype PickedPropsFromTextField = Pick<ComponentProps<typeof TextField>, 'id'>;\n\ntype PickedPropsFromTextFieldInput = Pick<\n  ComponentProps<typeof TextFieldInput>,\n  'placeholder' | 'isRequired' | 'textAlign'\n>;\n\ntype PickedPropsFromInlineUserAssistance = Pick<\n  ComponentProps<typeof InlineUserAssistance>,\n  | 'assistiveText'\n  | 'helpSourceLink'\n  | 'helpSourceText'\n  | 'isRequiredShown'\n  | 'messages'\n  | 'userAssistanceDensity'\n>;\n\ntype Props<K extends string | number, D extends Record<string, any>> = PickedPropsFromTextField &\n  PickedPropsFromTextFieldInput &\n  PickedPropsFromInlineUserAssistance & {\n    /**\n     * Specifies data for the dropdown list.\n     */\n    data?: DataState<K, D> | null;\n    /**\n     * Specifies whether the component is disabled.\n     */\n    isDisabled?: boolean;\n    /**\n     * Specifies whether the component is waiting for valueItems to load.\n     * While loading, SelectMultiple will show the progressive loading indicator in the text field.\n     */\n    isLoading?: boolean;\n    /**\n     * Specifies whether the component is readonly.\n     */\n    isReadonly?: boolean;\n    /**\n     * Specifies how to get the text string to render for a data item.\n     * This property can be set to either:\n     * 1) a string that specifies the name of a top level data attribute to render as text, or\n     * 2) a callback function that takes a properties object and returns the text string to\n     * display.\n     *\n     * This text will be rendered for the selected values of the component. It will also be\n     * rendered for each data item in the dropdown if no itemRenderer or collectionRenderer is\n     * provided. When rendered for the dropdown items, default matching search term highlighting\n     * will still be applied.\n     */\n    itemText: ItemTextType<K, D>;\n    /**\n     * Specifies the label.\n     */\n    label: string;\n    /**\n     * Specifies where the label is positioned.\n     */\n    labelEdge?: 'inside' | 'start' | 'top' | 'none';\n    /**\n     * Specifies the width of the label when labelEdge is 'start'\n     */\n    labelStartWidth?: Size;\n    /**\n     * Specifies the keys, data, and optional metadata for the selected values.\n     */\n    valueItems?: Item<K, D>[];\n    /**\n     * Specifies the type of soft keyboard to use on mobile.  Has no effect on desktop.\n     */\n    virtualKeyboard?: 'auto' | 'email' | 'number' | 'search' | 'tel' | 'text' | 'url';\n    /**\n     * Callback invoked when the selected values are committed.\n     */\n    onCommit: (detail: ValueUpdateDetail<Set<K>>) => void;\n    /**\n     * Callback function to trigger loading data for the dropdown list, which may or may not be\n     * filtered by user entered text.\n     */\n    onFilter?: ({ searchText }: { searchText?: string }) => void;\n    /**\n     * Callback function to handle when the viewport of the dropdown list has changed,\n     * including the case where the user scrolls to the end of the list and there are more\n     * items to load.\n     * The function should set a new DataState on the component for the specified range.\n     */\n    onLoadRange?: ComponentProps<typeof ListView>['onLoadRange'];\n  };\n\nexport const SelectMultiple = forwardRef(\n  <K extends string | number, D extends Record<string, any>>(\n    {\n      assistiveText,\n      data: propData,\n      helpSourceLink,\n      helpSourceText,\n      id: propId,\n      isDisabled: propIsDisabled,\n      isLoading: propIsLoading,\n      isReadonly: propIsReadonly,\n      isRequired = false,\n      isRequiredShown,\n      itemText,\n      label,\n      labelEdge: propLabelEdge,\n      labelStartWidth: propLabelStartWidth,\n      messages,\n      onCommit,\n      onFilter,\n      onLoadRange: propOnLoadRange,\n      placeholder,\n      textAlign: propTextAlign,\n      userAssistanceDensity: propUserAssistanceDensity,\n      valueItems,\n      virtualKeyboard\n    }: Props<K, D>,\n    ref?: Ref<FocusableHandle>\n  ) => {\n    const {\n      isDisabled: isFormDisabled,\n      isReadonly: isFormReadonly,\n      labelEdge: formLabelEdge,\n      labelStartWidth: formLabelStartWidth,\n      textAlign: formTextAlign,\n      userAssistanceDensity: formUserAssistanceDensity\n    } = useFormContext();\n    // default to FormContext values if component properties are not specified\n    const isDisabled = propIsDisabled ?? isFormDisabled;\n    const isReadonly = propIsReadonly ?? isFormReadonly;\n    const labelEdge = propLabelEdge ?? formLabelEdge;\n    const labelStartWidth = propLabelStartWidth ?? formLabelStartWidth;\n    const textAlign = propTextAlign ?? formTextAlign;\n    const userAssistanceDensity = propUserAssistanceDensity ?? formUserAssistanceDensity;\n\n    const {\n      enabledElementRef,\n      focusProps,\n      isFocused: origIsFocused,\n      readonlyElementRef\n    } = useFocusableTextField<HTMLInputElement, HTMLDivElement>({ isDisabled, isReadonly, ref });\n\n    const {\n      collectionProps,\n      data,\n      dropdownArrowEventHandlers,\n      dropdownEventHandlers,\n      dropdownRef,\n      hasSelectedValuesCount,\n      inputEventHandlers,\n      isDropdownOpen,\n      isDropdownSelectedOnlyView,\n      isFocused,\n      isUserFiltering,\n      mainFieldRef,\n      mouseProps,\n      onLoadRange,\n      searchText,\n      selectedValuesCountProps,\n      userInput\n    } = useSelectMultiple<K, D>({\n      data: propData,\n      inputRef: enabledElementRef as MutableRef<HTMLInputElement>,\n      isDisabled,\n      isFocused: origIsFocused,\n      isReadonly,\n      onCommit,\n      onFilter,\n      onLoadRange: propOnLoadRange,\n      valueItems\n    });\n\n    // The incoming propIsLoading tells us that we are in a loading state, but we don't want to\n    // show the loading indicator until after a delay, because showing it immediately could result\n    // in unwanted flashing.  The isLoading var below will be set to true by useLoadingIndicatorTimer\n    // after the delay, when the timer expires, at which point we should show the loading indicator.\n    // If propIsLoading is set to false before the timer expires, then the timer will be cancelled\n    // and no loading indicator will be shown.\n    // (ListView detects its loading state by checking data === null.  While it would be nice for\n    // us to be consistent and check valueItems === null, we need to use a separate isLoading prop.\n    // If valueItems === null triggers our loading state, then the selections in the dropdown\n    // are cleared for that period of time, which is undesirable.)\n    const isLoading = useLoadingIndicatorTimer(propIsLoading ?? false);\n\n    const {\n      baseId,\n      formFieldContext,\n      inputProps,\n      labelProps,\n      textFieldProps,\n      userAssistanceProps\n    } = useTextField({\n      id: propId,\n      isDisabled,\n      isFocused,\n      isLoading,\n      isReadonly,\n      labelEdge,\n      messages,\n      value: valueItems !== undefined && valueItems.length > 0 ? true : undefined\n    });\n\n    const dropdownId = `${baseId}-dropdown`;\n\n    const displayValue = useDisplayValues(itemText, valueItems);\n\n    const labelComp = labelEdge !== 'none' ? <Label {...labelProps}>{label}</Label> : undefined;\n\n    const fieldLabelProps = {\n      label: labelEdge !== 'none' ? labelComp : undefined,\n      labelEdge: labelEdge !== 'none' ? labelEdge : undefined,\n      labelStartWidth: labelEdge !== 'none' ? labelStartWidth : undefined\n    };\n\n    const ariaLabel = labelEdge === 'none' ? label : undefined;\n\n    const inlineUserAssistance =\n      isDisabled || isReadonly ? (\n        // save space for user assistance if density is 'efficient', even though we don't\n        // render user assistance for disabled or readonly fields\n        userAssistanceDensity !== 'efficient' ? undefined : (\n          <InlineUserAssistance\n            userAssistanceDensity={userAssistanceDensity}\n            {...userAssistanceProps}\n          />\n        )\n      ) : (\n        <InlineUserAssistance\n          assistiveText={assistiveText}\n          fieldLabel={label}\n          helpSourceLink={helpSourceLink}\n          helpSourceText={helpSourceText}\n          messages={messages}\n          isRequiredShown={isRequiredShown}\n          userAssistanceDensity={userAssistanceDensity}\n          {...userAssistanceProps}\n        />\n      );\n\n    if (isReadonly) {\n      return (\n        <FormFieldContext.Provider value={formFieldContext}>\n          <ReadonlyTextField\n            role=\"presentation\"\n            inlineUserAssistance={inlineUserAssistance}\n            onBlur={focusProps.onfocusout}\n            onFocus={focusProps.onfocusin}\n            {...fieldLabelProps}>\n            <ReadonlyTextFieldInput\n              ariaLabel={ariaLabel}\n              ariaLabelledby={labelProps.id}\n              as=\"div\"\n              elementRef={readonlyElementRef}\n              hasInsideLabel={label !== undefined && labelEdge === 'inside'}\n              id={textFieldProps.id}\n              textAlign={textAlign}\n              value={displayValue}\n            />\n          </ReadonlyTextField>\n        </FormFieldContext.Provider>\n      );\n    }\n\n    const hasInsideLabel = labelComp !== undefined && labelEdge === 'inside';\n\n    const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n\n    const liveRegionText =\n      isDropdownOpen && data !== undefined && data !== null && !isBeforeDataFetch<K, D>(data)\n        ? data?.totalSize === 0\n          ? translations.select_noMatchesFound()\n          : data?.totalSize === 1\n          ? translations.select_oneMatchFound()\n          : data?.sizePrecision === 'exact'\n          ? translations.select_sizeMatchesFound({ TOTAL_SIZE: `${data?.totalSize}` })\n          : translations.select_sizeOrMoreMatchesFound({ TOTAL_SIZE: `${data?.totalSize}` })\n        : '';\n\n    const mainContent = (\n      <Fragment>\n        <TextFieldInput\n          ariaAutocomplete=\"list\"\n          ariaControls={dropdownId}\n          ariaExpanded={isDropdownOpen}\n          ariaLabel={ariaLabel}\n          autoComplete=\"off\"\n          hasInsideLabel={hasInsideLabel}\n          inputRef={enabledElementRef}\n          isRequired={isRequired}\n          // onCommit={handleCommit}\n          {...inputEventHandlers}\n          placeholder={placeholder}\n          role=\"combobox\"\n          spellcheck={false}\n          textAlign={textAlign}\n          type={isMobile() ? virtualKeyboard : undefined}\n          value={isUserFiltering ? userInput : displayValue}\n          {...inputProps}\n        />\n        <LiveRegion>{liveRegionText}</LiveRegion>\n      </Fragment>\n    );\n\n    const dropdownArrow = (\n      <DropdownArrow\n        isDisabled={isDisabled}\n        size={hasInsideLabel ? 'md' : 'sm'}\n        {...dropdownArrowEventHandlers}\n      />\n    );\n    const selectedValuesCount = valueItems?.length;\n    const endContent = isLoading ? undefined : !hasSelectedValuesCount ? (\n      dropdownArrow\n    ) : (\n      <Flex align=\"center\" justify=\"center\" gap={[0, '1x']}>\n        <SelectedValuesCount\n          accessibleLabel={label}\n          count={selectedValuesCount}\n          isDisabled={isDisabled}\n          isSelected={isDropdownSelectedOnlyView}\n          {...selectedValuesCountProps}\n        />\n        {dropdownArrow}\n      </Flex>\n    );\n\n    return (\n      <Fragment>\n        <FormFieldContext.Provider value={formFieldContext}>\n          <TextField\n            endContent={endContent}\n            inlineUserAssistance={inlineUserAssistance}\n            mainContent={mainContent}\n            mainFieldRef={mainFieldRef}\n            onBlur={focusProps?.onfocusout}\n            onFocus={focusProps?.onfocusin}\n            {...textFieldProps}\n            {...fieldLabelProps}\n            {...mouseProps}></TextField>\n        </FormFieldContext.Provider>\n        <Dropdown\n          dropdownRef={dropdownRef}\n          id={dropdownId}\n          isOpen={\n            isDropdownOpen &&\n            data !== undefined &&\n            (data === null || data.totalSize > 0 || isBeforeDataFetch<K, D>(data))\n          }\n          anchorRef={mainFieldRef}\n          {...dropdownEventHandlers}>\n          <DropdownList isLoading={data === null}>\n            <DefaultList<K, D>\n              {...collectionProps}\n              accessibleSummary={label ?? ''}\n              data={data}\n              itemText={itemText}\n              onLoadRange={onLoadRange}\n              searchText={\n                isDropdownSelectedOnlyView ? undefined : isUserFiltering ? searchText : undefined\n              }\n            />\n          </DropdownList>\n        </Dropdown>\n      </Fragment>\n    );\n  }\n);\n\n/**\n * Helper function to determine whether the current device is a mobile device\n * @returns true if runnning on a mobile device, false otherwise\n */\nfunction isMobile() {\n  const deviceType = getClientHints().deviceType;\n  return deviceType === 'phone' || deviceType === 'tablet';\n}\n\nfunction isBeforeDataFetch<K, D>(data: DataState<K, D>) {\n  return data.sizePrecision === 'atLeast' && data.totalSize === 0;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nexport { SelectMultiple } from './SelectMultiple';\n"],"names":["itemStyles","noOp","DefaultList","accessibleSummary","currentKey","data","itemText","onCurrentKeyChange","onLoadRange","onSelectionChange","searchText","selectedKeys","listItemRenderer","useCallback","listItemContext","itemContext","key","metadata","_jsx","Object","assign","class","children","HighlightText","matchText","renderedItemText","ListView","gridlines","all","keys","Set","selectionMode","context","rootStyles","Dropdown","anchorRef","dropdownRef","id","isOpen","onAutoDismiss","handleAutoDismiss","event","handleKeyDown","useOutsideClick","ref","handler","inlineStyle","ojButtonHeight","ojButtonSmHeight","ojButtonBorderRadius","ojButtonBorderlessChromeTextColor","ojButtonBorderlessChromeTextColorDisabled","ojButtonBorderlessChromeTextColorHover","ojButtonBorderlessChromeBgColorHover","ojButtonBorderlessChromeBorderColorHover","noop","DropdownArrow","isDisabled","onClick","size","preventDefault","pressProps","usePress","base","sizeSm","sizeMd","styleClasses","tabIndex","onMouseDown","height","viewBox","width","xmlns","d","DropdownList","isLoading","listView","SelectedValuesCount","_a","accessibleLabel","count","onKeyDown","onKeyUp","passThroughProps","__rest","translations","useTranslationBundle","instructions","selectMultiple_showSelectedValues","accLabel","ninetyNinePlus","selectMultiple_countPlus","COUNT","chipCount","valuesSelectedText","selectMultiple_valuesSelected","Chip","label","_jsxs"],"mappings":"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"}