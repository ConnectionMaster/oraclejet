{"version":3,"file":"UNSAFE_useTextField.js","sources":["../../../src/hooks/UNSAFE_useTextField/useTextField.ts"],"sourcesContent":["import { ComponentProps } from 'preact';\nimport { useMemo } from 'preact/hooks';\nimport { Label } from '../../UNSAFE_Label';\nimport { TextField } from '../../UNSAFE_TextField';\nimport { InlineUserAssistance } from '../../UNSAFE_UserAssistance';\nimport { FormFieldContextProps } from '../UNSAFE_useFormFieldContext';\nimport { useId } from '../UNSAFE_useId';\n\ntype PickedUserAssistanceProps = Pick<ComponentProps<typeof InlineUserAssistance>, 'messages'>;\n\ntype UseTextFieldProps<V> = PickedUserAssistanceProps & {\n  id?: string;\n  isDisabled?: boolean;\n  isFocused?: boolean;\n  isLoading?: boolean;\n  isReadonly?: boolean;\n  labelEdge?: ComponentProps<typeof TextField>['labelEdge'] | 'none';\n  value?: V;\n  variant?: 'textarea';\n};\n\nconst rankedSeverities = ['error', 'warning', 'confirmation', 'info', 'none'];\n\n/**\n * A custom hook to determine the props for a component that renders\n * a text field\n */\nexport function useTextField<V>({\n  id: propId,\n  isDisabled,\n  isFocused,\n  isLoading,\n  isReadonly,\n  labelEdge,\n  messages,\n  value,\n  variant\n}: UseTextFieldProps<V>) {\n  const baseId = useId();\n  const id = propId || baseId;\n  const labelId = labelEdge !== 'none' ? `${baseId}-label` : undefined;\n  const inputId = !isReadonly ? `${baseId}-input` : undefined;\n  const uaId = !(isDisabled || isReadonly) ? `${baseId}-ua` : undefined;\n\n  // Create the form field context\n  const formFieldContext = useMemo<FormFieldContextProps>(() => {\n    const hasValue = value !== undefined && (typeof value !== 'string' || value !== '');\n    return isReadonly\n      ? {\n          hasValue: hasValue,\n          isFocused: isFocused,\n          isLoading,\n          isReadonly: true\n        }\n      : isDisabled\n      ? {\n          hasValue: hasValue,\n          isDisabled: true,\n          isLoading\n        }\n      : {\n          hasValue: hasValue,\n          isFocused: isFocused,\n          isLoading\n        };\n  }, [isDisabled, isFocused, isLoading, isReadonly, value]);\n\n  // Determine the highest severity from the messages\n  const messageSeverity = useMemo(() => {\n    return messages === undefined\n      ? undefined\n      : messages.reduce((accSeverity, currMessage) => {\n          const currSeverity = currMessage.severity || 'error';\n          return rankedSeverities.indexOf(accSeverity) < rankedSeverities.indexOf(currSeverity)\n            ? accSeverity\n            : currSeverity;\n        }, 'none');\n  }, [messages]);\n\n  // Determine the label variant\n  const labelVariant: ComponentProps<typeof Label>['variant'] =\n    labelEdge === 'inside'\n      ? messageSeverity === 'error'\n        ? 'insideError'\n        : messageSeverity === 'warning'\n        ? 'insideWarning'\n        : labelEdge\n      : labelEdge !== 'none'\n      ? labelEdge\n      : undefined;\n\n  const textFieldVariant: ComponentProps<typeof TextField>['variant'] = messageSeverity\n    ? messageSeverity === 'error'\n      ? variant\n        ? (`${variant}Error` as ComponentProps<typeof TextField>['variant'])\n        : messageSeverity\n      : messageSeverity === 'warning'\n      ? variant\n        ? (`${variant}Warning` as ComponentProps<typeof TextField>['variant'])\n        : messageSeverity\n      : variant\n    : variant;\n\n  return {\n    baseId,\n    formFieldContext,\n    inputProps: {\n      id: inputId,\n      ariaDescribedby: uaId,\n      ariaInvalid: messageSeverity === 'error' ? 'true' : undefined\n    },\n    labelProps: {\n      forId: inputId,\n      id: labelId,\n      variant: labelVariant\n    },\n    textFieldProps: {\n      id,\n      variant: textFieldVariant\n    },\n    userAssistanceProps: {\n      id: uaId\n    }\n  };\n}\n"],"names":[],"mappings":"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"}