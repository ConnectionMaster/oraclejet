{"version":3,"file":"UNSAFE_useContainerBreakpoints.js","sources":["../../../src/hooks/UNSAFE_useContainerBreakpoints/useContainerBreakpoints.ts"],"sourcesContent":["import { useState, useRef, useCallback, useMemo } from 'preact/hooks';\nimport { defaultBreakpoints, Breakpoints } from '../UNSAFE_useBreakpoints';\n\n/*\n * This custom hook returns the current breakpoints based on the width of a container, which is a DOM object.\n * The breakpoints are returned as a set of boolean values keyed to each breakpoint.\n *\n * TODO: Refactor to use a single ResizeObserver for better performance\n */\nexport function useContainerBreakpoints(breakpoints: Breakpoints = defaultBreakpoints) {\n  const [width, setWidth] = useState(0);\n  const observedNodeRef = useRef<HTMLElement | null>(null);\n\n  const resizeObserver = useMemo(\n    () =>\n      new ResizeObserver((entries) => {\n        for (let entry of entries) {\n          setWidth(entry.contentRect.width);\n        }\n      }),\n    []\n  );\n\n  const ref = useCallback((node: HTMLElement) => {\n    const observedNode = observedNodeRef.current;\n\n    if (node != observedNode) {\n      if (observedNode) {\n        resizeObserver.unobserve(observedNode);\n      }\n\n      if (node) {\n        resizeObserver.observe(node);\n      }\n\n      observedNodeRef.current = node;\n    }\n  }, []);\n\n  const breakpointMatches = useMemo(() => {\n    const matches: Record<string, boolean> = {};\n    for (let k in breakpoints) {\n      matches[k] = width >= parseInt(breakpoints[k]);\n    }\n    return matches;\n  }, [width]);\n\n  return { breakpointMatches, ref };\n}\n"],"names":[],"mappings":";;;;AAGA;;;;;AAKG;AACa,SAAA,uBAAuB,CAAC,WAAA,GAA2B,kBAAkB,EAAA;IACnF,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACtC,IAAA,MAAM,eAAe,GAAG,MAAM,CAAqB,IAAI,CAAC,CAAC;AAEzD,IAAA,MAAM,cAAc,GAAG,OAAO,CAC5B,MACE,IAAI,cAAc,CAAC,CAAC,OAAO,KAAI;AAC7B,QAAA,KAAK,IAAI,KAAK,IAAI,OAAO,EAAE;AACzB,YAAA,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AACnC,SAAA;AACH,KAAC,CAAC,EACJ,EAAE,CACH,CAAC;AAEF,IAAA,MAAM,GAAG,GAAG,WAAW,CAAC,CAAC,IAAiB,KAAI;AAC5C,QAAA,MAAM,YAAY,GAAG,eAAe,CAAC,OAAO,CAAC;QAE7C,IAAI,IAAI,IAAI,YAAY,EAAE;AACxB,YAAA,IAAI,YAAY,EAAE;AAChB,gBAAA,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;AACxC,aAAA;AAED,YAAA,IAAI,IAAI,EAAE;AACR,gBAAA,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9B,aAAA;AAED,YAAA,eAAe,CAAC,OAAO,GAAG,IAAI,CAAC;AAChC,SAAA;KACF,EAAE,EAAE,CAAC,CAAC;AAEP,IAAA,MAAM,iBAAiB,GAAG,OAAO,CAAC,MAAK;QACrC,MAAM,OAAO,GAA4B,EAAE,CAAC;AAC5C,QAAA,KAAK,IAAI,CAAC,IAAI,WAAW,EAAE;AACzB,YAAA,OAAO,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;AACjB,KAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;AAEZ,IAAA,OAAO,EAAE,iBAAiB,EAAE,GAAG,EAAE,CAAC;AACpC;;;;;;;"}