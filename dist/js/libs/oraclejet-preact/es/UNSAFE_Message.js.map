{"version":3,"file":"UNSAFE_Message.js","sources":["../../src/UNSAFE_Message/MessageCloseButton.tsx","../../src/UNSAFE_Message/Message.types.ts","../../src/UNSAFE_Message/MessageFormattingUtils.ts","../../src/UNSAFE_Message/MessageDetail.tsx","../../src/UNSAFE_Message/MessageStartIcon.tsx","../../src/UNSAFE_Message/MessageSummary.tsx","../../src/UNSAFE_Message/MessageTimestamp.tsx","../../src/UNSAFE_Message/MessageUtils.ts","../../src/UNSAFE_Message/Message.tsx","../../src/UNSAFE_Message/MessagesContext.ts","../../src/UNSAFE_Message/MessagesManager.tsx","../../src/UNSAFE_Message/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { VNode } from 'preact';\nimport { MessageVariant } from './Message.types';\n\nconst messageCloseButtonStyles = {\n  banner: cssProps`${{\n    marginInlineStart: '0.25rem',\n    marginInlineEnd: '-0.5rem',\n    marginTop: '-0.5rem',\n    marginBottom: '-0.5rem'\n  }}`,\n  inline: undefined\n};\n\n/**\n * Props for the MessageCloseButton component\n */\ntype Props = {\n  /**\n   * The callback function to be called when the close icon is clicked\n   */\n  onAction: (event?: Event) => void;\n\n  /**\n   * Button renderer\n   */\n  buttonRenderer?: (\n    title: string,\n    onAction: (event?: Event) => void,\n    variant?: MessageVariant\n  ) => VNode;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n\n  /**\n   * Close button title\n   */\n  title?: string;\n};\n\n/**\n * A Component for rendering the message close button\n */\nfunction MessageCloseButton({\n  onAction,\n  buttonRenderer,\n  title = 'Close',\n  variant = 'banner'\n}: Props) {\n  const renderedButton = buttonRenderer ? (\n    buttonRenderer(title, onAction, variant)\n  ) : (\n    // we should ultimately be able to create an oj-button (or rather its preact\n    // equivalent) here, but for now just create a regular HTML button if a renderer\n    // is not passed in from the core JET layer\n    <button aria-label={title} onClick={onAction} title={title}>\n      X\n    </button>\n  );\n  const classes = `oj-c-message${variant}-close-icon ${messageCloseButtonStyles[variant]}`;\n\n  // Otherwise, render the close icon\n  return <div class={classes}>{renderedButton}</div>;\n}\n\nexport { MessageCloseButton };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { stringLiteralArray } from '../utils/UNSAFE_arrayUtils';\n\nexport const variants = stringLiteralArray(['banner', 'inline']);\nexport type MessageVariant = typeof variants[number];\n\nexport const severities = stringLiteralArray(['error', 'warning', 'confirmation', 'info', 'none']);\nexport type MessageSeverity = typeof severities[number];\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { getLocale } from '../utils/UNSAFE_getLocale';\nimport { isEmptyOrUndefined } from '../utils/UNSAFE_stringUtils';\nimport { severities } from './Message.types';\n\n// Types of properties that can be formatted\ntype PropFormat = 'severity' | 'string' | 'timestamp';\n\n/**\n * Options for creating an Intl.DateTimeFormat instance.\n */\nconst DATE_FORMAT_OPTIONS = Object.freeze({\n  TODAY: {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  },\n  DEFAULT: {\n    day: '2-digit',\n    month: '2-digit',\n    year: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: true\n  }\n});\n\n/**\n * Regex for validating ISO timestamp\n */\nconst ISO_DATE_REGEX =\n  /^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(.[0-9]+)?(Z)?$/;\n\n/**\n * Checks if the provided date is today\n *\n * @param isoDate Date to be tested for today\n *\n * @returns boolean indicating if the provided date is today\n */\nfunction isDateToday(isoDate: string) {\n  const today = new Date();\n  const provided = new Date(isoDate);\n\n  return (\n    today.getUTCFullYear() === provided.getUTCFullYear() &&\n    today.getUTCMonth() === provided.getUTCMonth() &&\n    today.getUTCDate() === provided.getUTCDate()\n  );\n}\n\n/**\n * Creates an instance of Intl.DateTimeFormat\n *\n * @param isToday A boolean to indicate whether a formatter is needed for the date\n *                that is the current day.\n *\n * @returns the formatter instance\n */\nfunction getDateTimeFormatter(isToday: boolean) {\n  const locale = getLocale();\n  const { DateTimeFormat } = Intl;\n  if (isToday) {\n    return new DateTimeFormat(locale, DATE_FORMAT_OPTIONS.TODAY as Intl.DateTimeFormatOptions);\n  }\n\n  return new DateTimeFormat(locale, DATE_FORMAT_OPTIONS.DEFAULT as Intl.DateTimeFormatOptions);\n}\n\n/**\n * Checks if the provided value is valid for the prop specified.\n * By default, this method just checks for the value to be a valid string.\n *\n * @param value The value to be checked\n * @param prop The property for which the value needs to be evaluated\n *\n * @returns the result of the validation\n */\nfunction isValidValueForProp<T>(\n  value: T | null | undefined,\n  prop: PropFormat = 'string'\n): value is T {\n  switch (prop) {\n    case 'severity':\n      // Should be one of the allowed severity\n      return typeof value === 'string' && severities.includes(value as any);\n\n    case 'timestamp':\n      // Should be a valid ISO Datetime string\n      return typeof value === 'string' && ISO_DATE_REGEX.test(value);\n\n    case 'string':\n    default:\n      // anything other than null, undefined and '' is a valid string\n      return typeof value === 'string' && !isEmptyOrUndefined(value);\n  }\n}\n\n/**\n * Formats the timestamp in the required format based on the current\n * locale.\n *\n * @param isoTime Timestamp in ISO format\n */\nfunction formatTimestamp(isoTime: string) {\n  const isToday = isDateToday(isoTime);\n  const formatter = getDateTimeFormatter(isToday);\n\n  return formatter.format(new Date(isoTime));\n}\n\nexport { formatTimestamp, isValidValueForProp };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { ItemMetadata } from '../utils/UNSAFE_dataProvider';\nimport { ComponentChildren, Fragment } from 'preact';\nimport { MessageVariant } from './Message.types';\nimport { isValidValueForProp } from './MessageFormattingUtils';\n\nconst messageDetailStyles = {\n  // TODO: Reevaluate once the TEXT component is available (JET-46891)\n  base: cssProps`${{\n    marginTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)',\n    overflowWrap: 'anywhere'\n  }}`,\n\n  banner: cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-sm-font-size)',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-primary)'\n  }}`,\n  inline: undefined\n};\n\ntype MessageWithDetailText = {\n  /**\n   * The detail text for the message\n   */\n  detail?: string;\n};\n\n/**\n * Structure of template item used for dynamic templates\n */\ntype MessageTemplateItem<K, D> = {\n  /**\n   * The data for the current message\n   */\n  data: D;\n\n  /**\n   * The zero-based index of the current message\n   */\n  index: number;\n\n  /**\n   * The key for the current message\n   */\n  key: K;\n\n  /**\n   * The metadata for the current message\n   */\n  metadata?: ItemMetadata<K>;\n};\n\n/**\n * Props for the Detail component\n */\ntype Props<K, D> = {\n  /**\n   * The template item for rendering the detail content\n   */\n  item: MessageTemplateItem<K, D>;\n\n  /**\n   * A custom renderer for rendering the detail content\n   */\n  renderer?: (item: MessageTemplateItem<K, D>) => ComponentChildren;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n};\n\n/**\n * Default renderer for rendering the detail content.\n *\n * @param item The template item object\n * @returns Rendered detail content\n */\nfunction defaultDetailRenderer<D extends MessageWithDetailText>(\n  item: MessageTemplateItem<unknown, D>\n): ComponentChildren {\n  const { detail } = item.data;\n  // If the detail is null or an empty string, do not render the\n  // content row\n  if (!isValidValueForProp(detail)) {\n    return null;\n  }\n  return <Fragment>{detail}</Fragment>;\n}\n\n/**\n * Detail Component for rendering the detail content of the Message\n */\nfunction MessageDetail<K, D>({\n  item,\n  renderer = defaultDetailRenderer,\n  variant = 'banner'\n}: Props<K, D>) {\n  const renderedContent = renderer(item);\n\n  if (renderedContent == null) return null;\n\n  // If detail content is rendered, then wrap it in a div with specified style classes\n  const classes = `oj-c-message${variant}-detail ${messageDetailStyles.base} ${messageDetailStyles[variant]}`;\n  return <div class={classes}>{renderedContent}</div>;\n}\n\nexport { MessageDetail, MessageTemplateItem };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { MessageSeverity, MessageVariant } from './Message.types';\nimport {\n  MessageConfirmationIcon,\n  MessageErrorIcon,\n  MessageInfoIcon,\n  MessageWarningIcon\n} from '../UNSAFE_ThemedIcons';\nimport { Flex } from '../UNSAFE_Flex';\n\nconst messageStartIconStyles = cssProps`${{\n  marginInlineEnd: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-2x)'\n}}`;\n\nconst severityIconStyles = {\n  banner: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-start-icon-color)',\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-start-icon-size)',\n    height: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-summary-line-height)'\n  }}`,\n  inline: cssProps`${{\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-inline-start-icon-color)',\n    fontSize: '1rem'\n  }}`\n};\n\nconst severityIcons = {\n  confirmation: MessageConfirmationIcon,\n  error: MessageErrorIcon,\n  info: MessageInfoIcon,\n  warning: MessageWarningIcon\n};\n\n/**\n * Props for the StartIcon component\n */\ntype Props = {\n  /**\n   * The icon severity\n   */\n  severity: Exclude<MessageSeverity, 'none'>;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n\n  /**\n   * Translations resources\n   * TODO: Replace with preact translations when it is available\n   */\n  translations?: {\n    /**\n     * Text for 'error' severity level\n     */\n    error?: string;\n\n    /**\n     * Text for 'warning' severity level\n     */\n    warning?: string;\n\n    /**\n     * Text for 'info' severity level\n     */\n    info?: string;\n\n    /**\n     * Text for 'confirmation' severity level\n     */\n    confirmation?: string;\n  };\n};\n\n/**\n * StartIcon Component for rendering the severity based icon in Message\n */\nfunction MessageStartIcon({ severity, variant = 'banner', translations }: Props) {\n  const IconComponent = severityIcons[severity];\n  // TODO: JET-50793\n  const iconContent =\n    variant === 'banner' ? (\n      <Flex align=\"center\" height=\"100%\">\n        <IconComponent accessibleLabel={translations?.[severity]} />\n      </Flex>\n    ) : (\n      <IconComponent accessibleLabel={translations?.[severity]} />\n    );\n  return (\n    <div\n      class={classNames([\n        `oj-c-message${variant}-start-icon`,\n        messageStartIconStyles,\n        severityIconStyles[variant]\n      ])}\n      role=\"presentation\">\n      {iconContent}\n    </div>\n  );\n}\n\nexport { MessageStartIcon };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { MessageVariant } from './Message.types';\n\nconst messageSummaryStyles = {\n  // TODO: Reevaluate once the TEXT component is available (JET-46891)\n  base: cssProps`${{\n    flex: '1',\n    overflowWrap: 'anywhere'\n  }}`,\n\n  banner: cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-summary-text-size)',\n    fontWeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-summary-text-weight)',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-summary-text-color)'\n  }}`,\n\n  inline: cssProps`${{\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-user-assistance-inline-font-size)',\n    fontWeight: '400',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-user-assistance-inline-text-color)',\n    lineHeight: 1.333\n  }}`\n};\n\n/**\n * Props for the Summary component\n */\ntype Props = {\n  /**\n   * The summary text\n   */\n  text?: string;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n};\n\n/**\n * Summary Component for rendering the summary text of the Message\n */\nfunction MessageSummary({ text, variant = 'banner' }: Props) {\n  const classes = `oj-c-message${variant}-summary ${messageSummaryStyles.base} ${messageSummaryStyles[variant]}`;\n  return (\n    <div role=\"heading\" class={classes}>\n      {text}\n    </div>\n  );\n}\n\nexport { MessageSummary };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { MessageVariant } from './Message.types';\nimport { formatTimestamp } from './MessageFormattingUtils';\n\nconst messageTimestampStyles = {\n  banner: cssProps`${{\n    flexShrink: 0,\n    fontSize: 'var(--oj-c-PRIVATE-DO-NOT-USE-typography-body-xs-font-size)',\n    color: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-text-color-secondary)'\n  }}`,\n  inline: undefined\n};\n\n/**\n * Props for the Timestamp component\n */\ntype Props = {\n  /**\n   * The timestamp to show in ISO format\n   */\n  value: string;\n\n  /**\n   * Style variant\n   */\n  variant?: MessageVariant;\n};\n\n/**\n * Timestamp Component for rendering timestamp in Message\n */\nfunction MessageTimestamp({ value, variant = 'banner' }: Props) {\n  const classes = `oj-c-message${variant}-timestamp ${messageTimestampStyles[variant]}`;\n\n  // Otherwise, render the timestamp\n  const formattedTimestamp = formatTimestamp(value as string);\n  return <div class={classes}>{formattedTimestamp}</div>;\n}\n\nexport { MessageTimestamp };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChildren } from 'preact';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { Logger } from '../utils/UNSAFE_logger';\nimport { playAudioFromURL, playDefaultNotificationSound } from '../utils/UNSAFE_soundUtils';\nimport { isValidValueForProp } from './MessageFormattingUtils';\nimport { MessageSeverity, MessageVariant } from './Message.types';\n\n/**\n * Logger that prepends the component name to the message\n */\nconst MessageLogger = {\n  error: (message: string, type = 'common') => Logger.error(`JET Message(${type}): ${message}`),\n  warn: (message: string, type = 'common') => Logger.warn(`JET Message(${type}): ${message}`),\n  info: (message: string, type = 'common') => Logger.info(`JET Message(${type}): ${message}`),\n  log: (message: string, type = 'common') => Logger.log(`JET Message(${type}): ${message}`)\n};\n\n/**\n * Plays a sound based on the provided argument. Supported keywords:\n * 1. default - plays the default beep sound\n * 2. none - no sound will be played\n *\n * @param sound Supported keywords or URL to an audio file\n */\nasync function playSound(sound: string) {\n  if (sound === 'none') {\n    // no need to play any audio\n    return;\n  }\n\n  // For default, we play a beep sound using WebAudio API\n  if (sound === 'default') {\n    try {\n      playDefaultNotificationSound();\n    } catch (error) {\n      // Default sound is not played due to some error\n      // Log a message and return doing nothing else\n      MessageLogger.warn(`Failed to play the default sound. ${error}.`);\n    }\n    return;\n  }\n\n  // If it is not a key word, then it is an URL\n  try {\n    await playAudioFromURL(sound);\n  } catch (error) {\n    // Playing audio using the URL failed.\n    MessageLogger.warn(`Failed to play the audio from the url ${sound}. ${error}.`);\n  }\n}\n\n/**\n * A helper function that throws an error\n *\n * @param message The error message\n * @param type The type of the message that is throwing an error\n * @throws {Error}\n */\nfunction throwError(message: string, type = 'common') {\n  throw new Error(`JET Message(${type}) - ${message}`);\n}\n\n/**\n * Fetches a renderer for the current message if one is provided\n *\n * @param message The item context for the current message\n * @param rendererIdentifier Identifier of the current renderer\n * @param renderers All available renderers\n * @returns The renderer for rendering the custom content\n */\nfunction getRenderer<K, D, R>(\n  message: Item<K, D>,\n  rendererIdentifier?: string | ((item: Item<K, D>) => string | null),\n  renderers?: Record<string, (data: R) => ComponentChildren>,\n  type?: string\n) {\n  // If either detailRenderer function or record of renderers are not available,\n  // return null\n  if (!rendererIdentifier || !renderers) {\n    return undefined;\n  }\n\n  const rendererKey =\n    typeof rendererIdentifier === 'function' ? rendererIdentifier(message) : rendererIdentifier;\n\n  // If rendererKey is null or undefined, then we need to use default rendering\n  // so return null\n  if (rendererKey == null) {\n    return undefined;\n  }\n\n  // If the returned render key is a string but does not exist in the provided\n  // record of dynamic template slots, throw an error\n  if (!(rendererKey in renderers)) {\n    throwError(\n      `${rendererKey} is not a valid template name for the message with key=${message.key}`,\n      type\n    );\n  }\n\n  // Else, fetch and return the renderer\n  return renderers[rendererKey];\n}\n\n/**\n * Generates a root style class based on the severity. For invalid severity and severity=none\n * no specific style class exists.\n *\n * @param severity The message severity\n * @returns calculated style class based on the severity\n */\nfunction severityBasedStyleClass(severity: MessageSeverity, variant: MessageVariant) {\n  const isValidSeverity = isValidValueForProp(severity, 'severity');\n  return isValidSeverity && severity !== 'none' ? `oj-c-message${variant}-${severity}` : '';\n}\n\n/**\n * Determines if a severity icon is needed based on the component severity\n *\n * @param severity The component severity\n * @returns Whether or not to render the severity icon\n */\nfunction isSeverityIconNeeded(\n  severity: MessageSeverity\n): severity is Exclude<MessageSeverity, 'none'> {\n  const isValidSeverity = isValidValueForProp(severity, 'severity');\n  return isValidSeverity && severity !== 'none';\n}\n\nexport { getRenderer, playSound, throwError, severityBasedStyleClass, isSeverityIconNeeded };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { Flex } from '../UNSAFE_Flex';\nimport { classNames as cx } from '../utils/UNSAFE_classNames';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { ComponentChildren, Ref, VNode } from 'preact';\nimport { useCallback, useEffect, useImperativeHandle, useRef } from 'preact/hooks';\nimport { MessageSeverity } from './Message.types';\nimport { MessageCloseButton } from './MessageCloseButton';\nimport { MessageDetail, MessageTemplateItem } from './MessageDetail';\nimport { isValidValueForProp } from './MessageFormattingUtils';\nimport { MessageStartIcon } from './MessageStartIcon';\nimport { MessageSummary } from './MessageSummary';\nimport { MessageTimestamp } from './MessageTimestamp';\nimport { playSound } from './MessageUtils';\n\n/**\n * An object representing a single message in Message component.\n */\nexport type MessageItem = {\n  /**\n   * Defines whether or not to include the close icon for the message\n   */\n  closeAffordance?: 'on' | 'off';\n\n  /**\n   * Defines the detail text of the message\n   */\n  detail?: string;\n\n  /**\n   * Defines the severity of the message\n   */\n  severity?: MessageSeverity;\n\n  /**\n   * Defines the sound to be played when opening the message\n   */\n  sound?: 'default' | 'none' | string;\n\n  /**\n   * Defines the primary text of the message\n   */\n  summary?: string;\n\n  /**\n   * Defines the timestamp for the message in ISO format\n   */\n  timestamp?: string;\n};\n\n/**\n * Generates a root style class based on the severity. For invalid severity and severity=none\n * no specific style class exists.\n *\n * @param severity The message severity\n * @returns calculated style class based on the severity\n */\nfunction getSeverityStyleClass(severity: MessageSeverity) {\n  const isValidSeverity = isValidValueForProp(severity, 'severity');\n  return cx([isValidSeverity && severity !== 'none' && `oj-c-messagebanner-${severity}`]);\n}\n\n/**\n * Determines if a severity icon is needed based on the component severity\n *\n * @param severity The component severity\n * @returns Whether or not to render the severity icon\n */\nfunction isSeverityIconNeeded(\n  severity: MessageSeverity\n): severity is Exclude<MessageSeverity, 'none'> {\n  const isValidSeverity = isValidValueForProp(severity, 'severity');\n  return isValidSeverity && severity !== 'none';\n}\n\n/**\n * CSS styles for various components\n */\nconst messageStyles = {\n  base: cssProps`${{\n    backgroundColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-background-color)',\n    borderBottom: '1px solid var(--oj-c-PRIVATE-DO-NOT-USE-core-divider-color)',\n\n    '&:focus-visible': {\n      outlineStyle: 'dotted',\n      outlineWidth: '1px',\n      outlineColor: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-focus-border-color)',\n      outlineOffset: '1px'\n    }\n  }}`,\n  section: cssProps`${{\n    border: '1px solid var(--oj-c-PRIVATE-DO-NOT-USE-core-divider-color)',\n    borderRadius: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-border-radius-lg)'\n  }}`,\n  header: cssProps`${{\n    lineHeight: 'var(--oj-c-PRIVATE-DO-NOT-USE-message-banner-summary-line-height)',\n    boxSizing: 'border-box',\n\n    // TODO: Replace with Flex and ResponsiveProps once it is available.\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexDirection: 'row',\n    '@media screen and (max-width: 599.9px)': {\n      flexDirection: 'column'\n    }\n  }}`,\n  // TODO: Replace with Flex and View components to handle padding and flex\n  content: cssProps`${{\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexWrap: 'wrap',\n    paddingTop: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x)',\n    paddingBottom: 'var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x)',\n    paddingInlineStart:\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-gutter-start, var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x))',\n    paddingInlineEnd:\n      'var(--oj-c-PRIVATE-DO-NOT-USE-core-gutter-end, var(--oj-c-PRIVATE-DO-NOT-USE-core-spacing-4x))'\n  }}`\n};\n\n/**\n * Props for the MessageHeader component\n */\ntype MessageHeaderProps = {\n  children?: ComponentChildren;\n};\n/**\n * A component that styles the header for the message component\n * @param param0 Props\n * @returns MessageHeader component instance\n */\nfunction StyledMessageHeader({ children }: MessageHeaderProps) {\n  return (\n    <div role=\"presentation\" class={messageStyles.header}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Type of the mutated Ref to allow setting focus\n */\ntype SimpleBannerMessageHandle = {\n  /**\n   * Method to set focus to the rendered message\n   */\n  focus: () => void;\n\n  /**\n   * Method to determine whether an element is inside this component\n   * @param element The candidate element\n   */\n  contains: (element?: Element | null) => boolean;\n};\n\n/**\n * Props for the Message Component\n */\ntype Props<Key, Data> = {\n  /**\n   * A ref object for holding reference to this component\n   */\n  messageRef?: Ref<SimpleBannerMessageHandle>;\n\n  /**\n   * The index of the current message instance\n   */\n  index?: number;\n\n  /**\n   * The message item with all the necessary data in it\n   */\n  item: Item<Key, Data>;\n\n  /**\n   * A Banner message can have a different look and feel. For example, when using page-level\n   * messaging the messages need to be rendered from edge to edge without any outline. On the other\n   * hand, when they are being used in a section of a page or a dialog, they need to be rendered\n   * with an outline. This attribute can be used to specify where the component is being used so that\n   * it will render the messages accordingly.\n   */\n  type?: 'page' | 'section';\n\n  /**\n   * A renderer that renders the close button in the message.\n   */\n  closeButtonRenderer?: (title: string, onAction: (event?: Event) => void) => VNode;\n\n  /**\n   * A custom renderer for rendering the detail content\n   */\n  detailRenderer?: (item: MessageTemplateItem<Key, Data>) => ComponentChildren;\n\n  /**\n   * Triggered when a user tries to close a message through UI interaction. The parent\n   * should listen to this event and remove the corresponding message item from the data\n   * which would then result in the message to be removed from the DOM. If the parent\n   * fails to remove the message item from the data, then no change will be done in the\n   * UI by the component.\n   */\n  onClose?: (item: Item<Key, Data>) => void;\n\n  /**\n   * Translations resources\n   * TODO: Replace with preact translations when it is available\n   */\n  translations?: {\n    /**\n     * Label for the message close button\n     */\n    close?: string;\n\n    /**\n     * Text for 'error' severity level\n     */\n    error?: string;\n\n    /**\n     * Text for 'warning' severity level\n     */\n    warning?: string;\n\n    /**\n     * Text for 'info' severity level\n     */\n    info?: string;\n\n    /**\n     * Text for 'confirmation' severity level\n     */\n    confirmation?: string;\n  };\n};\n\n/**\n * Component that renders an individual message\n */\nfunction Message<K extends string | number = string | number, D extends MessageItem = MessageItem>({\n  closeButtonRenderer,\n  detailRenderer,\n  index = -1,\n  item,\n  onClose,\n  messageRef = () => {},\n  translations,\n  type\n}: Props<K, D>) {\n  const { closeAffordance = 'on', severity = 'error', sound, summary, timestamp } = item.data;\n  const severityClass = getSeverityStyleClass(severity);\n  const containerDivRef = useRef<HTMLDivElement>(null);\n\n  // Add methods to the ref object\n  useImperativeHandle(messageRef, () => ({\n    focus: () => containerDivRef.current?.focus(),\n    contains: (element) => {\n      return (\n        containerDivRef.current === element ||\n        ((element && containerDivRef.current?.contains(element)) ?? false)\n      );\n    }\n  }));\n\n  /**\n   * Handles clicking on the close icon of the message\n   */\n  const handleClose = useCallback(() => {\n    onClose?.(item);\n  }, [item, onClose]);\n\n  /**\n   * Handles closing the message on pressing Esc\n   */\n  const handleCloseOnEsc = useCallback(\n    (event: KeyboardEvent) => {\n      // Close the message only when closeAffordance is on\n      if (event.key === 'Escape' && closeAffordance === 'on') {\n        onClose?.(item);\n      }\n    },\n    [closeAffordance, item, onClose]\n  );\n\n  useEffect(() => {\n    if (isValidValueForProp(sound)) {\n      // It is sufficient to check for the value to be a\n      // non-empty string. The playSound method takes care of the rest.\n      playSound(sound);\n    }\n  }, []); // No deps to run this only on mount\n\n  const rootClasses = cx([\n    messageStyles.base,\n    severityClass,\n    type === 'section' && messageStyles.section\n  ]);\n\n  // We will be animating the root div, so add padding to an inner wrapper div so that\n  // when animating height looks smooth. If padding were to be added to the root\n  // div, the animation will not be smooth as height will never reach 0 due to the\n  // padding.\n  return (\n    <div\n      ref={containerDivRef}\n      class={rootClasses}\n      role=\"alert\"\n      aria-atomic=\"true\"\n      tabIndex={0}\n      onKeyUp={handleCloseOnEsc}>\n      <div class={messageStyles.content}>\n        {isSeverityIconNeeded(severity) && (\n          <MessageStartIcon variant=\"banner\" severity={severity} translations={translations} />\n        )}\n        <Flex direction=\"column\" flex=\"1\">\n          <StyledMessageHeader>\n            <MessageSummary variant=\"banner\" text={summary} />\n            {isValidValueForProp(timestamp, 'timestamp') && (\n              <MessageTimestamp variant=\"banner\" value={timestamp!} />\n            )}\n          </StyledMessageHeader>\n          <MessageDetail variant=\"banner\" item={{ ...item, index }} renderer={detailRenderer} />\n        </Flex>\n        {closeAffordance === 'on' && (\n          <MessageCloseButton\n            buttonRenderer={closeButtonRenderer}\n            title={translations?.close}\n            variant=\"banner\"\n            onAction={handleClose}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { Message };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { createContext } from 'preact';\nimport { useContext } from 'preact/hooks';\n\n/**\n * Messages Context\n */\ntype MessagesContextProps = {\n  /**\n   * An optional function that adds busy state to the root element\n   */\n  addBusyState?: (description?: string) => () => void;\n};\n\n/**\n * Context which the parent custom element components can use for passing down\n * the busy context\n */\nconst MessagesContext = createContext<MessagesContextProps>({});\n\n/**\n * Uses the MessagesContext if one is available.\n *\n * @returns The context from the closes provider\n */\nfunction useMessagesContext() {\n  return useContext(MessagesContext);\n}\n\nexport { MessagesContext, useMessagesContext };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { ComponentChild, Fragment } from 'preact';\nimport { useCallback } from 'preact/hooks';\nimport { Transition, TransitionGroup } from '../UNSAFE_TransitionGroup';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { useMessagesContext } from './MessagesContext';\n\n/**\n * A type that defines animation configuration\n */\ntype MessageAnimation = {\n  effect?: string;\n  duration?: string | number;\n  direction?: string;\n};\n\n/**\n * Transition states for animations\n */\ntype TransitionState = 'enter' | 'exit';\n\n/**\n * Metadata passed on to the Transition component\n */\ntype TransitionMetadata<K> = {\n  index: number;\n  key: K;\n};\n\n/**\n * Type of the render context passed on to render individual message\n */\ntype MessageRenderContext<Key, Data> = {\n  /**\n   * The index of the current message\n   */\n  index: number;\n\n  /**\n   * The message item with all the necessary data in it\n   */\n  item: Item<Key, Data>;\n};\n\n// Type of startAnimation property\ntype StartAnimType = (\n  element: Element,\n  action: string,\n  effects: string | object | (string | object)[],\n  component?: object\n) => Promise<unknown>;\n\n/**\n * Props for the Message Component\n */\ntype Props<Key, Data> = {\n  /**\n   * An object of various animation effects for the transitions.\n   */\n  animations?: Record<string, MessageAnimation[]>;\n\n  /**\n   * A render function that renders individual child.\n   */\n  children?: (context: MessageRenderContext<Key, Data>) => ComponentChild;\n\n  /**\n   * Data for the messages. This data is used for rendering each message.\n   */\n  data: Item<Key, Data>[];\n\n  /**\n   * Method for starting an animation.\n   */\n  startAnimation?: StartAnimType;\n\n  /**\n   * A callback function that gets called before a message is removed\n   */\n  onMessageWillRemove?: (key: Key, index: number, node?: Element) => void;\n};\n\n/**\n * The component that renders individual messages for the provided data.\n */\nfunction MessagesManager<K extends string | number = string | number, D = any>(props: Props<K, D>) {\n  const { children, data } = props;\n  const { handleEntering, handleExiting } = useMessagesManager(props);\n\n  return (\n    <TransitionGroup elementType={Fragment}>\n      {data.map((item, index) => (\n        <Transition\n          key={item.key}\n          metadata={{ index, key: item.key }}\n          onEntering={handleEntering}\n          onExiting={handleExiting}>\n          {children?.({ index, item })}\n        </Transition>\n      ))}\n    </TransitionGroup>\n  );\n}\n\n/**\n * A custom hook for creating the listeners for the MessagesManager\n *\n * @param param0 The props for the messages\n * @returns The transition listeners\n */\nfunction useMessagesManager<K, D>({\n  animations,\n  startAnimation = () => Promise.resolve(false),\n  onMessageWillRemove\n}: Props<K, D>) {\n  const { addBusyState } = useMessagesContext();\n\n  /**\n   * Adds busy state if available in the context\n   *\n   * @param description The description of the busyState\n   * @returns The busyState resolver\n   */\n  const _addBusyState = useCallback(\n    (description: string) => {\n      return addBusyState?.(description) ?? (() => {});\n    },\n    [addBusyState]\n  );\n\n  /**\n   * Performs animation.\n   *\n   * @param type The type of the animation\n   * @param base The root DOM element\n   */\n  const performAnimation = useCallback(\n    async (type: TransitionState, base?: Element) => {\n      if (!base) {\n        return;\n      }\n\n      const animation = animations?.[type];\n      if (animation) {\n        const busyStateResolver = _addBusyState(`performing message animation - ${type}`);\n        // If an animation is provided for the current transition, perform the animation\n        await startAnimation(base, type, animation);\n        busyStateResolver();\n      }\n    },\n    [animations, startAnimation, _addBusyState]\n  );\n\n  /**\n   * Handles when a message is successfully entered.\n   *\n   * @param node The corresponding message element\n   * @param callback A callback function to be called after the animation is complete\n   */\n  const handleEntering = useCallback(\n    async (node?: Element, callback?: () => void) => {\n      await performAnimation('enter', node);\n      callback?.();\n    },\n    [performAnimation]\n  );\n\n  /**\n   * Handles when a message has started to exit.\n   *\n   * @param node The corresponding message element\n   * @param callback A callback function to be called after the animation is complete\n   */\n  const handleExiting = useCallback(\n    async (node?: Element, callback?: () => void, metadata?: TransitionMetadata<K>) => {\n      await performAnimation('exit', node);\n      metadata && onMessageWillRemove?.(metadata.key, metadata.index, node);\n      callback?.();\n    },\n    [performAnimation, onMessageWillRemove]\n  );\n\n  return { handleEntering, handleExiting };\n}\n\nexport { MessageAnimation, MessagesManager };\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport { Message } from './Message';\nexport type { MessageItem } from './Message';\nexport { MessageCloseButton } from './MessageCloseButton';\nexport { MessageDetail } from './MessageDetail';\nexport type { MessageTemplateItem } from './MessageDetail';\nexport { formatTimestamp, isValidValueForProp } from './MessageFormattingUtils';\nexport { MessagesContext } from './MessagesContext';\nexport { MessagesManager } from './MessagesManager';\nexport type { MessageAnimation } from './MessagesManager';\nexport { MessageStartIcon } from './MessageStartIcon';\nexport { MessageSummary } from './MessageSummary';\nexport { MessageTimestamp } from './MessageTimestamp';\nexport {\n  getRenderer,\n  playSound,\n  throwError,\n  severityBasedStyleClass,\n  isSeverityIconNeeded\n} from './MessageUtils';\nexport type { MessageSeverity } from './Message.types';\nexport { severities } from './Message.types';\n"],"names":["messageCloseButtonStyles","inline","undefined","MessageCloseButton","onAction","buttonRenderer","title","variant","renderedButton","_jsx","Object","assign","class","classes","children","messageDetailStyles","defaultDetailRenderer","item","detail","data","isValidValueForProp","Fragment","MessageDetail","renderer","renderedContent","base","messageStartIconStyles","severityIconStyles","severityIcons","confirmation","MessageConfirmationIcon","error","MessageErrorIcon","info","MessageInfoIcon","warning","MessageWarningIcon","MessageStartIcon","severity","translations","IconComponent","classNames","messageSummaryStyles","MessageSummary","text","role","messageTimestampStyles","MessageTimestamp","value","formattedTimestamp","formatTimestamp","isSeverityIconNeeded","getSeverityStyleClass","cx","isValidSeverity","messageStyles","StyledMessageHeader","header","Message","closeButtonRenderer","detailRenderer","index","onClose","messageRef","type","closeAffordance","sound","summary","timestamp","severityClass","containerDivRef","useRef","useImperativeHandle","focus","_a","current","contains","element","_b","handleClose","useCallback","handleCloseOnEsc","event","section","ref","rootClasses","tabIndex","onKeyUp","_jsxs","content","Flex","direction","flex","close"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,MAAAA,wBAAA,GAAA;UAAA,QAAA;AAOEC,EAAAA,MAAA,EAAAC,SAAAA;AAPF,CAAA,CAAA;AAuCA;;AAEG;;AACH,SAAAC,kBAAA,CAAA;EAAAC,QAAA;EAAAC,cAAA;AAAAC,EAAAA,KAAA,GAAA,OAAA;AAAAC,EAAAA,OAAA,GAAA,QAAA;AAAA,CAAA,EAAA;AAME,EAAA,MAAAC,cAAA,GAAAH,cAAA,GAAAA,cAAA,CAAAC,KAAA,EAAAF,QAAA,EAAAG,OAAA,CAAA;;;;;;;;;KAAA,CAAA;2FANF;;AAmBE,EAAA,OAAAE,GAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,IAAAA,KAAA,EAAAC,OAAAA;AAAA,GAAA,EAAA;AAAAC,IAAAA,QAAA,EAAAN,cAAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AACF;;AC1EA;;;;;;AAMG;AAII,MAAM,QAAQ,GAAG,kBAAkB,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;AAGpD,MAAA,UAAU,GAAG,kBAAkB,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,CAAC;;ACbjG;;;;;;AAMG;AAQH;;AAEG;AACH,MAAM,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC;AACxC,IAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,MAAM,EAAE,SAAS;AACjB,QAAA,MAAM,EAAE,IAAI;AACb,KAAA;AACD,IAAA,OAAO,EAAE;AACP,QAAA,GAAG,EAAE,SAAS;AACd,QAAA,KAAK,EAAE,SAAS;AAChB,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,MAAM,EAAE,SAAS;AACjB,QAAA,MAAM,EAAE,IAAI;AACb,KAAA;AACF,CAAA,CAAC,CAAC;AAEH;;AAEG;AACH,MAAM,cAAc,GAClB,oIAAoI,CAAC;AAEvI;;;;;;AAMG;AACH,SAAS,WAAW,CAAC,OAAe,EAAA;AAClC,IAAA,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;AACzB,IAAA,MAAM,QAAQ,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;IAEnC,QACE,KAAK,CAAC,cAAc,EAAE,KAAK,QAAQ,CAAC,cAAc,EAAE;AACpD,QAAA,KAAK,CAAC,WAAW,EAAE,KAAK,QAAQ,CAAC,WAAW,EAAE;QAC9C,KAAK,CAAC,UAAU,EAAE,KAAK,QAAQ,CAAC,UAAU,EAAE,EAC5C;AACJ,CAAC;AAED;;;;;;;AAOG;AACH,SAAS,oBAAoB,CAAC,OAAgB,EAAA;AAC5C,IAAA,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;AAC3B,IAAA,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC;AAChC,IAAA,IAAI,OAAO,EAAE;QACX,OAAO,IAAI,cAAc,CAAC,MAAM,EAAE,mBAAmB,CAAC,KAAmC,CAAC,CAAC;AAC5F,KAAA;IAED,OAAO,IAAI,cAAc,CAAC,MAAM,EAAE,mBAAmB,CAAC,OAAqC,CAAC,CAAC;AAC/F,CAAC;AAED;;;;;;;;AAQG;AACH,SAAS,mBAAmB,CAC1B,KAA2B,EAC3B,OAAmB,QAAQ,EAAA;AAE3B,IAAA,QAAQ,IAAI;AACV,QAAA,KAAK,UAAU;;YAEb,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAY,CAAC,CAAC;AAExE,QAAA,KAAK,WAAW;;YAEd,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjE,QAAA,KAAK,QAAQ,CAAC;AACd,QAAA;;YAEE,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAClE,KAAA;AACH,CAAC;AAED;;;;;AAKG;AACH,SAAS,eAAe,CAAC,OAAe,EAAA;AACtC,IAAA,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;AACrC,IAAA,MAAM,SAAS,GAAG,oBAAoB,CAAC,OAAO,CAAC,CAAC;IAEhD,OAAO,SAAS,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7C;;ACrGA,MAAAO,mBAAA,GAAA;;QAAA,QAAA;UAAA,QAAA;AAWEd,EAAAA,MAAA,EAAAC,SAAAA;AAXF,CAAA,CAAA;AAkEA;;;;;AAKG;;AACH,SAAAc,qBAAA,CAAAC,IAAA,EAAA;EAGE,MAAA;AAAAC,IAAAA,MAAAA;AAAA,GAAA,GAAAD,IAAA,CAAAE,IAAA,CAHF;;;AAME,EAAA,IAAA,CAAAC,mBAAA,CAAAF,MAAA,CAAA,EAAA;AACE,IAAA,OAAA,IAAA,CAAA;AACD,GAAA;;EACD,OAAAT,GAAA,CAAAY,QAAA,EAAA;AAAAP,IAAAA,QAAA,EAAAI,MAAAA;AAAA,GAAA,CAAA,CAAA;AACF,CAAA;AAEA;;AAEG;;;AACH,SAAAI,aAAA,CAAA;EAAAL,IAAA;AAAAM,EAAAA,QAAA,GAAAP,qBAAA;AAAAT,EAAAA,OAAA,GAAA,QAAA;AAAA,CAAA,EAAA;AAKE,EAAA,MAAAiB,eAAA,GAAAD,QAAA,CAAAN,IAAA,CAAA,CAAA;+BAE6B,OAAA,IAAA,CAP/B;;AAUE,EAAA,MAAAJ,OAAA,GAAA,CAAAN,YAAAA,EAAAA,OAAA,CAAAQ,QAAAA,EAAAA,mBAAA,CAAAU,IAAA,CAAAV,CAAAA,EAAAA,mBAAA,CAAAR,OAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,OAAAE,GAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,IAAAA,KAAA,EAAAC,OAAAA;AAAA,GAAA,EAAA;AAAAC,IAAAA,QAAA,EAAAU,eAAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AACF;;AC9FA,MAAAE,sBAAA,GAAA,QAAA,CAAA;AAIA,MAAAC,kBAAA,GAAA;UAAA,QAAA;;AAAA,CAAA,CAAA;AAYA,MAAAC,aAAA,GAAA;AACEC,EAAAA,YAAA,EAAAC,cADF;AAEEC,EAAAA,KAAA,EAAAC,YAFF;AAGEC,EAAAA,IAAA,EAAAC,kBAHF;AAIEC,EAAAA,OAAA,EAAAC,cAAAA;AAJF,CAAA,CAAA;AAgDA;;AAEG;;AACH,SAAAC,gBAAA,CAAA;EAAAC,QAAA;AAAA/B,EAAAA,OAAA,GAAA,QAAA;AAAAgC,EAAAA,YAAAA;AAAA,CAAA,EAAA;AACE,EAAA,MAAAC,aAAA,GAAAZ,aAAA,CAAAU,QAAA,CAAA,CADF;;;;;;;;;;;;AAWE,EAAA,OAAA7B,GAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,IAAAA,KAAA,EAAA6B,UAAA,CAAA,CAGM,eAAAlC,OAAA,CAAA,WAAA,CAHN,wBAAA,6BAAA,CAAA,CAAA;;AAAA,GAAA;;GAAA,CAAA,CAAA,CAAA;AAWF;;AClGA,MAAAmC,oBAAA,GAAA;;QAAA,QAAA;UAAA,SAAA;;AAAA,CAAA,CAAA;AAoCA;;AAEG;;AACH,SAAAC,cAAA,CAAA;EAAAC,IAAA;AAAArC,EAAAA,OAAA,GAAA,QAAA;AAAA,CAAA,EAAA;AACE,EAAA,MAAAM,OAAA,GAAA,CAAAN,YAAAA,EAAAA,OAAA,CAAAmC,SAAAA,EAAAA,oBAAA,CAAAjB,IAAA,CAAAiB,CAAAA,EAAAA,oBAAA,CAAAnC,OAAA,CAAA,CAAA,CAAA,CAAA;AACA,EAAA,OAAAE,GAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAkC,IAAAA,IAAA,EAAA,SAAA;AAAAjC,IAAAA,KAAA,EAAAC,OAAAA;AAAA,GAAA,EAAA;AAAAC,IAAAA,QAAA,EAAA8B,IAAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAKF;;AC5CA,MAAAE,sBAAA,GAAA;UAAA,SAAA;AAME7C,EAAAA,MAAA,EAAAC,SAAAA;AANF,CAAA,CAAA;AAwBA;;AAEG;;AACH,SAAA6C,gBAAA,CAAA;EAAAC,KAAA;AAAAzC,EAAAA,OAAA,GAAA,QAAA;AAAA,CAAA,EAAA;wFAAA;;AAIE,EAAA,MAAA0C,kBAAA,GAAAC,eAAA,CAAAF,KAAA,CAAA,CAAA;AACA,EAAA,OAAAvC,GAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,IAAAA,KAAA,EAAAC,OAAAA;AAAA,GAAA,EAAA;AAAAC,IAAAA,QAAA,EAAAmC,kBAAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AACF;;AC/BA;;AAEG;AACH,MAAM,aAAa,GAAG;AACpB,IAAA,KAAK,EAAE,CAAC,OAAe,EAAE,IAAI,GAAG,QAAQ,KAAK,MAAM,CAAC,KAAK,CAAC,CAAA,YAAA,EAAe,IAAI,CAAM,GAAA,EAAA,OAAO,EAAE,CAAC;AAC7F,IAAA,IAAI,EAAE,CAAC,OAAe,EAAE,IAAI,GAAG,QAAQ,KAAK,MAAM,CAAC,IAAI,CAAC,CAAA,YAAA,EAAe,IAAI,CAAM,GAAA,EAAA,OAAO,EAAE,CAAC;AAC3F,IAAA,IAAI,EAAE,CAAC,OAAe,EAAE,IAAI,GAAG,QAAQ,KAAK,MAAM,CAAC,IAAI,CAAC,CAAA,YAAA,EAAe,IAAI,CAAM,GAAA,EAAA,OAAO,EAAE,CAAC;AAC3F,IAAA,GAAG,EAAE,CAAC,OAAe,EAAE,IAAI,GAAG,QAAQ,KAAK,MAAM,CAAC,GAAG,CAAC,CAAA,YAAA,EAAe,IAAI,CAAM,GAAA,EAAA,OAAO,EAAE,CAAC;CAC1F,CAAC;AAEF;;;;;;AAMG;AACH,eAAe,SAAS,CAAC,KAAa,EAAA;IACpC,IAAI,KAAK,KAAK,MAAM,EAAE;;QAEpB,OAAO;AACR,KAAA;;IAGD,IAAI,KAAK,KAAK,SAAS,EAAE;QACvB,IAAI;AACF,YAAA,4BAA4B,EAAE,CAAC;AAChC,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;;;AAGd,YAAA,aAAa,CAAC,IAAI,CAAC,qCAAqC,KAAK,CAAA,CAAA,CAAG,CAAC,CAAC;AACnE,SAAA;QACD,OAAO;AACR,KAAA;;IAGD,IAAI;AACF,QAAA,MAAM,gBAAgB,CAAC,KAAK,CAAC,CAAC;AAC/B,KAAA;AAAC,IAAA,OAAO,KAAK,EAAE;;QAEd,aAAa,CAAC,IAAI,CAAC,CAAA,sCAAA,EAAyC,KAAK,CAAK,EAAA,EAAA,KAAK,CAAG,CAAA,CAAA,CAAC,CAAC;AACjF,KAAA;AACH,CAAC;AAED;;;;;;AAMG;AACH,SAAS,UAAU,CAAC,OAAe,EAAE,IAAI,GAAG,QAAQ,EAAA;IAClD,MAAM,IAAI,KAAK,CAAC,CAAA,YAAA,EAAe,IAAI,CAAO,IAAA,EAAA,OAAO,CAAE,CAAA,CAAC,CAAC;AACvD,CAAC;AAED;;;;;;;AAOG;AACH,SAAS,WAAW,CAClB,OAAmB,EACnB,kBAAmE,EACnE,SAA0D,EAC1D,IAAa,EAAA;;;AAIb,IAAA,IAAI,CAAC,kBAAkB,IAAI,CAAC,SAAS,EAAE;AACrC,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;AAED,IAAA,MAAM,WAAW,GACf,OAAO,kBAAkB,KAAK,UAAU,GAAG,kBAAkB,CAAC,OAAO,CAAC,GAAG,kBAAkB,CAAC;;;IAI9F,IAAI,WAAW,IAAI,IAAI,EAAE;AACvB,QAAA,OAAO,SAAS,CAAC;AAClB,KAAA;;;AAID,IAAA,IAAI,EAAE,WAAW,IAAI,SAAS,CAAC,EAAE;QAC/B,UAAU,CACR,CAAG,EAAA,WAAW,CAA0D,uDAAA,EAAA,OAAO,CAAC,GAAG,CAAE,CAAA,EACrF,IAAI,CACL,CAAC;AACH,KAAA;;AAGD,IAAA,OAAO,SAAS,CAAC,WAAW,CAAC,CAAC;AAChC,CAAC;AAED;;;;;;AAMG;AACH,SAAS,uBAAuB,CAAC,QAAyB,EAAE,OAAuB,EAAA;IACjF,MAAM,eAAe,GAAG,mBAAmB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAClE,IAAA,OAAO,eAAe,IAAI,QAAQ,KAAK,MAAM,GAAG,CAAe,YAAA,EAAA,OAAO,IAAI,QAAQ,CAAA,CAAE,GAAG,EAAE,CAAC;AAC5F,CAAC;AAED;;;;;AAKG;AACH,SAASE,sBAAoB,CAC3B,QAAyB,EAAA;IAEzB,MAAM,eAAe,GAAG,mBAAmB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAClE,IAAA,OAAO,eAAe,IAAI,QAAQ,KAAK,MAAM,CAAC;AAChD;;AC7EA;;;;;;AAMG;;AACH,SAAAC,qBAAA,CAAAd,QAAA,EAAA;;AAEE,EAAA,OAAAe,UAAA,CAAA,CAAAC,eAAA,IAAAhB,QAAA,KAAA,MAAA,IAAA,CAAA,mBAAA,EAAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACF,CAAA;AAEA;;;;;AAKG;;;AACH,SAAAa,oBAAA,CAAAb,QAAA,EAAA;;AAIE,EAAA,OAAAgB,eAAA,IAAAhB,QAAA,KAAA,MAAA,CAAA;AACF,CAAA;AAEA;;AAEG;;;AACH,MAAAiB,aAAA,GAAA;QAAA,SAAA;WAAA,SAAA;UAAA,SAAA;;;AAAA,CAAA,CAAA;AAgDA;;;;AAIG;;AACH,SAAAC,mBAAA,CAAA;AAAA1C,EAAAA,QAAAA;AAAA,CAAA,EAAA;AACE,EAAA,OAAAL,GAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAkC,IAAAA,IAAA,EAAA,cAAA;IAAAjC,KAAA,EAAA2C,aAAA,CAAAE,MAAAA;AAAA,GAAA,EAAA;AAAA3C,IAAAA,QAAA,EAAAA,QAAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAKF,CAAA;AAiGA;;AAEG;;;AACH,SAAA4C,OAAA,CAAA;EAAAC,mBAAA;EAAAC,cAAA;EAAAC,KAAA,GAAA,CAAA,CAAA;EAAA5C,IAAA;EAAA6C,OAAA;EAAAC,UAAA,GAAA,MAAA,EAAA;EAAAxB,YAAA;AAAAyB,EAAAA,IAAAA;AAAA,CAAA,EAAA;EAUE,MAAA;AAAAC,IAAAA,eAAA,GAAA,IAAA;AAAA3B,IAAAA,QAAA,GAAA,OAAA;IAAA4B,KAAA;IAAAC,OAAA;AAAAC,IAAAA,SAAAA;GAAAnD,GAAAA,IAAA,CAAAE,IAAA,CAAA;AACA,EAAA,MAAAkD,aAAA,GAAAjB,qBAAA,CAAAd,QAAA,CAAA,CAAA;AACA,EAAA,MAAAgC,eAAA,GAAAC,MAAA,CAAA,IAAA,CAAA,CAZF;;EAeEC,mBAAA,CAAAT,UAAA,EAAA,OAAA;AACEU,IAAAA,KAAA,EAAA,MAAA;AAAA,MAAA,IAAAC,EAAA,CAAA;;MAAA,OAAA,CAAAA,EAAA,GAAAJ,eAAA,CAAAK,OAAA,MAAA,IAAA,IAAAD,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAD,KAAA,EAAA,CAAA;KADF;IAEEG,QAAA,EAAAC,OAAA,IAAA;;;MACE,OAAAP,eAAA,CAAAK,OAAA,KAAAE,OAAA,KAEE,CAAAC,EAAA,GAAAD,OAAA,KAAA,CAAAH,EAAA,GAAAJ,eAAA,CAAAK,OAAA,MAAA,IAAA,IAAAD,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,EAAA,CAAAE,QAAA,CAAAC,OAAA,CAAA,CAAA,MAAA,IAAA,IAAAC,EAAA,KAAA,KAAA,CAAA,GAAAA,EAAA,GAAA,KAFF,CAAA,CAAA;;AAHJ,GAAA,CAAA,CAAA,CAAA;AAUA;;AAEG;;AACH,EAAA,MAAAC,WAAA,GAAAC,WAAA,CAAA,MAAA;AACElB,IAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAAA7C,IAAA,CAAA,CAAA;AACF,GAFA,EAEA,CAAAA,IAAA,EAAA6C,OAAA,CAFA,CAAA,CAAA;AAIA;;AAEG;;AACH,EAAA,MAAAmB,gBAAA,GAAAD,WAAA,CAAAE,KAAA,IAAA;;;AAIMpB,MAAAA,OAAA,KAAA,IAAA,IAAAA,OAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,OAAA,CAAA7C,IAAA,CAAA,CAAA;AACD,KAAA;GALL,kCAAA,CAAA,CAAA;;AAWE,IAAA,IAAAG,mBAAA,CAAA8C,KAAA,CAAA,EAAA;;;;AAIC,KAAA;AACH,KAAA,IAnDF;;kCAsDIX,aAAA,CAAA9B,qBAEAuC,IAAA,KAAA,SAAA,IAAAT,aAAA,CAAA4B,UAxDJ;;;;;AA+DE,EAAA,OAAA1E,GAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAyE,IAAAA,GAAA,EAAAd,eAAA;AAAA1D,IAAAA,KAAA,EAAAyE,WAAA;AAAAxC,IAAAA,IAAA,EAAA,OAAA;AAAA,IAAA,aAAA,EAAA,MAAA;AAAAyC,IAAAA,QAAA,EAAA,CAAA;AAAAC,IAAAA,OAAA,EAAAN,gBAAAA;AAAA,GAAA,EAAA;IAAAnE,QAAA,EAAA0E,IAAA,CAAA,KAAA,EAAA9E,MAAA,CAAAC,MAAA,CAAA;MAAAC,KAAA,EAAA2C,aAAA,CAAAkC,OAAAA;AAAA,KAAA,EAAA;MAAA3E,QAAA,EAAA,CAAAqC,oBAAA,CAAAb,QAAA,CAAA,IAAA7B,GAAA,CAAA4B,gBAAA,EAAA;AAAA9B,QAAAA,OAAA,EAAA,QAAA;AAAA+B,QAAAA,QAAA,EAAAA,QAAA;AAAAC,QAAAA,YAAA,EAAAA,YAAAA;OAAA,CAAA,EAAAiD,IAAA,CAAAE,IAAA,EAAAhF,MAAA,CAAAC,MAAA,CAAA;AAAAgF,QAAAA,SAAA,EAAA,QAAA;AAAAC,QAAAA,IAAA,EAAA,GAAA;AAAA,OAAA,EAAA;AAAA9E,QAAAA,QAAA,EAAA,CAAA0E,IAAA,CAAAhC,mBAAA,EAAA;AAAA1C,UAAAA,QAAA,EAAA,CAAAL,GAAA,CAAAkC,cAAA,EAAA;AAAApC,YAAAA,OAAA,EAAA,QAAA;AAAAqC,YAAAA,IAAA,EAAAuB,OAAAA;AAAA,WAAA,CAAA,EAAA/C,mBAAA,CAAAgD,SAAA,EAAA,WAAA,CAAA,IAAA3D,GAAA,CAAAsC,gBAAA,EAAA;AAAAxC,YAAAA,OAAA,EAAA,QAAA;AAAAyC,YAAAA,KAAA,EAAAoB,SAAAA;AAAA,WAAA,CAAA,CAAA;AAAA,SAAA,CAAA,EAAA3D,GAAA,CAAAa,aAAA,EAAA;AAAAf,UAAAA,OAAA,EAAA,QAAA;AAAAU,UAAAA,IAAA,EAAAP,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAA,EAAA,EAAAM,IAAA,CAAA,EAAA;AAAA4C,YAAAA,KAAAA;AAAA,WAAA,CAAA;AAAAtC,UAAAA,QAAA,EAAAqC,cAAAA;AAAA,SAAA,CAAA,CAAA;OAAA,CAAA,CAAA,EAAAK,eAAA,KAAA,IAAA,IAAAxD,GAAA,CAAAN,kBAAA,EAAA;AAAAE,QAAAA,cAAA,EAAAsD,mBAAA;AAAArD,QAAAA,KAAA,EAAAiC,YAAA,KAAA,IAAA,IAAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,YAAA,CAAAsD,KAAA;AAAAtF,QAAAA,OAAA,EAAA,QAAA;AAAAH,QAAAA,QAAA,EAAA2E,WAAAA;AAAA,OAAA,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAgCF;;ACnVA;;;;;;AAMG;AAeH;;;AAGG;AACH,MAAM,eAAe,GAAG,aAAa,CAAuB,EAAE,EAAE;AAEhE;;;;AAIG;AACH,SAAS,kBAAkB,GAAA;AACzB,IAAA,OAAO,UAAU,CAAC,eAAe,CAAC,CAAC;AACrC;;ACsDA;;AAEG;AACH,SAAS,eAAe,CAAuD,KAAkB,EAAA;AAC/F,IAAA,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC;IACjC,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;AAEpE,IAAA,QACEtE,GAAA,CAAC,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,EAAC,WAAW,EAAE,QAAQ,EAAA,EAAA,EAAA,QAAA,EACnC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,MACpBA,GAAA,CAAC,UAAU,EAAA,MAAA,CAAA,MAAA,CAAA,EAET,QAAQ,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,EAClC,UAAU,EAAE,cAAc,EAC1B,SAAS,EAAE,aAAa,EACvB,EAAA,EAAA,QAAA,EAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAJvB,CAAA,EAAA,IAAI,CAAC,GAAG,CAKF,CACd,CAAC,EAAA,CAAA,CACc,EAClB;AACJ,CAAC;AAED;;;;;AAKG;AACH,SAAS,kBAAkB,CAAO,EAChC,UAAU,EACV,cAAc,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAC7C,mBAAmB,EACP,EAAA;AACZ,IAAA,MAAM,EAAE,YAAY,EAAE,GAAG,kBAAkB,EAAE,CAAC;AAE9C;;;;;AAKG;AACH,IAAA,MAAM,aAAa,GAAG,WAAW,CAC/B,CAAC,WAAmB,KAAI;;AACtB,QAAA,OAAO,MAAA,YAAY,KAAA,IAAA,IAAZ,YAAY,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAZ,YAAY,CAAG,WAAW,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,IAAK,MAAO,GAAC,CAAC,CAAC;AACnD,KAAC,EACD,CAAC,YAAY,CAAC,CACf,CAAC;AAEF;;;;;AAKG;IACH,MAAM,gBAAgB,GAAG,WAAW,CAClC,OAAO,IAAqB,EAAE,IAAc,KAAI;QAC9C,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;AACR,SAAA;QAED,MAAM,SAAS,GAAG,UAAU,KAAV,IAAA,IAAA,UAAU,uBAAV,UAAU,CAAG,IAAI,CAAC,CAAC;AACrC,QAAA,IAAI,SAAS,EAAE;YACb,MAAM,iBAAiB,GAAG,aAAa,CAAC,kCAAkC,IAAI,CAAA,CAAE,CAAC,CAAC;;YAElF,MAAM,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5C,YAAA,iBAAiB,EAAE,CAAC;AACrB,SAAA;KACF,EACD,CAAC,UAAU,EAAE,cAAc,EAAE,aAAa,CAAC,CAC5C,CAAC;AAEF;;;;;AAKG;IACH,MAAM,cAAc,GAAG,WAAW,CAChC,OAAO,IAAc,EAAE,QAAqB,KAAI;AAC9C,QAAA,MAAM,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACtC,QAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,EAAI,CAAC;AACf,KAAC,EACD,CAAC,gBAAgB,CAAC,CACnB,CAAC;AAEF;;;;;AAKG;AACH,IAAA,MAAM,aAAa,GAAG,WAAW,CAC/B,OAAO,IAAc,EAAE,QAAqB,EAAE,QAAgC,KAAI;AAChF,QAAA,MAAM,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACrC,QAAA,QAAQ,KAAI,mBAAmB,KAAA,IAAA,IAAnB,mBAAmB,KAAnB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,mBAAmB,CAAG,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA,CAAC;AACtE,QAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,EAAI,CAAC;AACf,KAAC,EACD,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,CACxC,CAAC;AAEF,IAAA,OAAO,EAAE,cAAc,EAAE,aAAa,EAAE,CAAC;AAC3C;;AC7LA;;;;;;AAMG;;;;;;;"}