{"version":3,"file":"UNSAFE_ComponentMessage.js","sources":["../../src/UNSAFE_ComponentMessage/ComponentMessage.tsx","../../src/UNSAFE_ComponentMessage/ComponentMessageContainer.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport {\n  isSeverityIconNeeded,\n  MessageStartIcon,\n  MessageSummary,\n  MessageSeverity,\n  severityBasedStyleClass\n} from '../UNSAFE_Message';\nimport { classNames } from '../utils/UNSAFE_classNames';\n\nconst baseStyles = cssProps`${{\n  boxSizing: 'border-box',\n  // TODO: Use Flex Component instead of CSS\n  display: 'flex',\n  flexWrap: 'wrap'\n}}`;\n\n/**\n * A type for a single component message\n */\nexport type ComponentMessageItem = {\n  summary?: string;\n  detail?: string;\n  severity?: Exclude<MessageSeverity, 'none'>;\n};\n\n/**\n * Props for the Message Component\n */\ntype Props = {\n  /**\n   * The severity of the component message\n   */\n  severity?: ComponentMessageItem['severity'];\n\n  /**\n   * The error detail text for the component message\n   */\n  detail?: ComponentMessageItem['detail'];\n};\n\n/**\n * The component that renders an individual message for inline component messaging.\n */\nexport function ComponentMessage({ severity = 'error', detail }: Props) {\n  const classes = classNames([baseStyles, severityBasedStyleClass(severity, 'inline')]);\n\n  return (\n    <div class={classes} role=\"alert\" aria-atomic=\"true\">\n      {isSeverityIconNeeded(severity) && <MessageStartIcon variant=\"inline\" severity={severity} />}\n      {/* We will be using the MessageSummary component, as this aligns with the style required */}\n      <MessageSummary variant=\"inline\" text={detail} />\n    </div>\n  );\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nimport { cssProps } from '@oracle/oraclejet-cssprops';\nimport { MessageAnimation, MessagesManager } from '../UNSAFE_Message';\nimport { Item } from '../utils/UNSAFE_dataProvider';\nimport { ComponentMessage, ComponentMessageItem } from './ComponentMessage';\n\nconst rootStyles = cssProps`${{\n  overflowX: 'hidden',\n  overflowY: 'hidden'\n}}`;\n\n/**\n * Converts the messages data into Item\n *\n * @param messages The messages data passed down as prop\n * @returns The messages data as Item\n */\nfunction generateMessagesData(messages: ComponentMessageItem[]) {\n  return messages.map<Item<number, ComponentMessageItem>>((message, index) => {\n    return {\n      key: index,\n      data: {\n        closeAffordance: 'off',\n        severity: message.severity || 'error',\n        detail: message.detail\n      }\n    };\n  });\n}\n\n/**\n * Props for the ComponentMessaging component\n */\ntype Props = {\n  /**\n   * An object of various animation effects for the transitions.\n   */\n  animations?: Record<string, MessageAnimation[]>;\n\n  /**\n   * Data for the messages. This data is used for rendering each message.\n   */\n  messages?: ComponentMessageItem[];\n};\n\nexport function ComponentMessageContainer({ animations, messages = [] }: Props) {\n  return (\n    <div class={rootStyles}>\n      <MessagesManager animations={animations} data={generateMessagesData(messages)}>\n        {({ item }) => (\n          <ComponentMessage\n            key={item.key}\n            detail={item.data.detail}\n            severity={item.data.severity}\n          />\n        )}\n      </MessagesManager>\n    </div>\n  );\n}\n"],"names":["baseStyles","ComponentMessage","severity","detail","classes","classNames","severityBasedStyleClass","_jsxs","Object","assign","class","role","children","isSeverityIconNeeded","_jsx","MessageStartIcon","variant","MessageSummary","text","rootStyles","generateMessagesData","messages","key","index","data","closeAffordance","message","ComponentMessageContainer","animations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,UAAA,GAAA,SAAA,CAAA;AA+BA;;AAEG;;AACH,SAAAC,gBAAA,CAAA;AAAAC,EAAAA,QAAA,GAAA,OAAA;AAAAC,EAAAA,MAAAA;AAAA,CAAA,EAAA;AACE,EAAA,MAAAC,OAAA,GAAAC,UAAA,CAAA,CAAAL,UAAA,EAAAM,uBAAA,CAAAJ,QAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA;AAEA,EAAA,OAAAK,IAAA,CAAA,KAAA,EAAAC,MAAA,CAAAC,MAAA,CAAA;AAAAC,IAAAA,KAAA,EAAAN,OAAA;AAAAO,IAAAA,IAAA,EAAA,OAAA;IAAA,aAAA,EAAA,MAAA;AAAA,GAAA,EAAA;IAAAC,QAAA,EAAA,CAAAC,oBAAA,CAAAX,QAAA,CAAA,IAAAY,GAAA,CAAAC,gBAAA,EAAA;AAAAC,MAAAA,OAAA,EAAA,QAAA;AAAAd,MAAAA,QAAA,EAAAA,QAAAA;AAAA,KAAA,CAAA,EAAAY,GAAA,CAAAG,cAAA,EAAA;AAAAD,MAAAA,OAAA,EAAA,QAAA;AAAAE,MAAAA,IAAA,EAAAf,MAAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA,CAAA,CAAA,CAAA;AAOF;;ACjDA,MAAAgB,UAAA,GAAA,SAAA,CAAA;AAKA;;;;;AAKG;;AACH,SAAAC,oBAAA,CAAAC,QAAA,EAAA;;;AAGMC,MAAAA,GAAA,EAAAC;AACAC,MAAAA,IAAA,EAAA;AACEC,QAAAA,eAAA,EAAA,KADF;AAEEvB,QAAAA,QAAA,EAAAwB,OAAA,CAAAxB,QAAA,IAAA,OAFF;;AAAA,OAAA;;AAMJ;AACF,CAAA;;AAiBA,SAAAyB,yBAAA,CAAA;EAAAC,UAAA;AAAAP,EAAAA,QAAA,GAAA,EAAA;AAAA,CAAA,EAAA;;;;;;;;;;;;;;;;AAcA;;;;;;;"}