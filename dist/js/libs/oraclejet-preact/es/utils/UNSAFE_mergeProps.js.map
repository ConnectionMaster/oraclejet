{"version":3,"file":"UNSAFE_mergeProps.js","sources":["../../../src/utils/UNSAFE_mergeProps/mergeProps.ts","../../../src/utils/UNSAFE_mergeProps/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2011 %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\n//  MIT License\n\n//  Copyright (c) 2018 Andrew Branch\n\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\n//  of this software and associated documentation files (the \"Software\"), to deal\n//  in the Software without restriction, including without limitation the rights\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n//  copies of the Software, and to permit persons to whom the Software is\n//  furnished to do so, subject to the following conditions:\n\n//  The above copyright notice and this permission notice shall be included in all\n//  copies or substantial portions of the Software.\n\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n//  SOFTWARE.\n\ntype UnionToIntersection<U> = (U extends any ? (k: U) => void : never) extends (k: infer I) => void\n  ? I\n  : never;\n\n/**\n * pushProps\n * @param target\n * @param key\n * @param value\n * @returns\n */\nfunction pushProp(target: { [key: string]: any }, key: string, value: any): void {\n  if (key === 'class') {\n    const oldClass = target['class'];\n    target['class'] = oldClass ? [oldClass, value].join(' ').trim() : value;\n  } else if (key === 'style') {\n    if (typeof value == 'object') {\n      target['style'] = { ...target['style'], ...value };\n    } else {\n      throw new Error(\n        `Unable to merge prop '${key}'. ` + `Only support 'style' objects not 'style' strings`\n      );\n    }\n  } else if (typeof value === 'function') {\n    const oldFn = target[key] as Function | undefined;\n    target[key] = oldFn\n      ? (...args: any[]) => {\n          oldFn(...args);\n          (value as Function)(...args);\n        }\n      : value;\n  } else if (\n    // skip undefined values\n    value === undefined ||\n    // skip if same\n    (typeof value !== 'object' && value === target[key])\n  ) {\n    return;\n  } else if (!(key in target)) {\n    target[key] = value;\n  } else {\n    // TODO: Could just let last value win, ie:\n    throw new Error(\n      `Unable to merge prop '${key}'. ` + `Only support 'className', 'style', and event handlers`\n      // Merging other allProps seems troublesome\n    );\n  }\n}\n\n/**\n * Merges allProps together:\n *  - duplicate className and class allProps concatenated\n *  - duplicate style allProps merged - note that only style objects supported at this point\n *  - duplicate functions chained\n * @param allProps Props to merge together.\n */\nexport function mergeProps<T extends {}[]>(\n  ...allProps: T\n): {\n  [K in keyof UnionToIntersection<T[number]>]: K extends 'class'\n    ? string\n    : K extends 'style'\n    ? UnionToIntersection<T[number]>[K]\n    : Exclude<Extract<T[number], { [Q in K]: unknown }>[K], undefined>;\n} {\n  if (allProps.length === 1) {\n    return allProps[0] as any;\n  }\n\n  return allProps.reduce((merged, props: any) => {\n    for (const key in props) {\n      pushProp(merged, key, props[key]);\n    }\n    return merged;\n  }, {}) as any;\n}\n","/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\nexport * from './mergeProps';\n"],"names":[],"mappings":";AAAA;;;;;;AAMG;AA4BH;;;;;;AAMG;AACH,SAAS,QAAQ,CAAC,MAA8B,EAAE,GAAW,EAAE,KAAU,EAAA;IACvE,IAAI,GAAG,KAAK,OAAO,EAAE;AACnB,QAAA,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QACjC,MAAM,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC;AACzE,KAAA;SAAM,IAAI,GAAG,KAAK,OAAO,EAAE;AAC1B,QAAA,IAAI,OAAO,KAAK,IAAI,QAAQ,EAAE;YAC5B,MAAM,CAAC,OAAO,CAAC,GAAQ,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,MAAM,CAAC,OAAO,CAAC,CAAA,EAAK,KAAK,CAAE,CAAC;AACpD,SAAA;AAAM,aAAA;YACL,MAAM,IAAI,KAAK,CACb,CAAA,sBAAA,EAAyB,GAAG,CAAK,GAAA,CAAA,GAAG,CAAkD,gDAAA,CAAA,CACvF,CAAC;AACH,SAAA;AACF,KAAA;AAAM,SAAA,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;AACtC,QAAA,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAyB,CAAC;AAClD,QAAA,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK;AACjB,cAAE,CAAC,GAAG,IAAW,KAAI;AACjB,gBAAA,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AACd,gBAAA,KAAkB,CAAC,GAAG,IAAI,CAAC,CAAC;aAC9B;cACD,KAAK,CAAC;AACX,KAAA;AAAM,SAAA;;AAEL,IAAA,KAAK,KAAK,SAAS;;AAEnB,SAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,EACpD;QACA,OAAO;AACR,KAAA;AAAM,SAAA,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,EAAE;AAC3B,QAAA,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AACrB,KAAA;AAAM,SAAA;;AAEL,QAAA,MAAM,IAAI,KAAK,CACb,yBAAyB,GAAG,CAAA,GAAA,CAAK,GAAG,CAAuD,qDAAA,CAAA;;SAE5F,CAAC;AACH,KAAA;AACH,CAAC;AAED;;;;;;AAMG;AACa,SAAA,UAAU,CACxB,GAAG,QAAW,EAAA;AAQd,IAAA,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACzB,QAAA,OAAO,QAAQ,CAAC,CAAC,CAAQ,CAAC;AAC3B,KAAA;IAED,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,KAAU,KAAI;AAC5C,QAAA,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;YACvB,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC,SAAA;AACD,QAAA,OAAO,MAAM,CAAC;KACf,EAAE,EAAE,CAAQ,CAAC;AAChB;;ACzGA;;;;;;AAMG;;;;;;;"}